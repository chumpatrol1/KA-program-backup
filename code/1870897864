/*********************************************************
 * Sticks casting shadows on the surface of the Earth
 * 
 * Use the mouse to move the second stick
 * 
 * To do:
 *   - Show angle of shadow
*********************************************************/

var earth_r = 195;
var earth_x = 200;
var earth_y = 394;
var EARTH_COL = color(61, 100, 255);

var SUN_COL = color(250, 217, 0);
var SUN_COL2 = color(250, 217, 0, 100);

var arc_size = 60;
var max_angle = 40;
/*****************************************************
 *        Poles
*****************************************************/

var Pole = function(angle, height) {
    this.angle = angle;
    this.height = height;
    this.held = false;
    this.draggable = true;
    
    var s = sin(this.angle);
    var c = cos(this.angle);
    var d1 = this.height + earth_r - 5;
    
    this.setPosition = function() {
        s = sin(this.angle);
        c = cos(this.angle);
        d1 = this.height + earth_r - 5;
        
        this.x1 = earth_x + (earth_r - 2) * s;
        this.y1 = earth_y - (earth_r - 2) * c;
        this.x2 = earth_x + d1 * s;
        this.y2 = earth_y - d1 * c;
    };
    this.setPosition();
    
    this.draw = function() {
        var d2 = this.height * tan(this.angle);
        var a = this.angle + atan(this.height/earth_r * tan(this.angle));
        
        // Shadow
        fill(SUN_COL2);
        noStroke();
        triangle(this.x1, this.y1,
                 this.x1 + (this.height-1) * s,
                 this.y1 + d2 * sin(a),
                 this.x1 + (this.height-1) * s,
                 this.y1 - (this.height-1) * c);
        
        strokeWeight(3);
        stroke(50);
        noFill();
        arc(earth_x, earth_y,
            earth_r*2-5, earth_r*2-5,
            this.angle-89, a-90);
        
        strokeWeight(1);
        stroke(255);
        var angle = round(10 * abs(this.angle)) / 10;
        if (this.angle > 0) {
            arc(this.x2, this.y2, 40, 40, 90, 90 + this.angle);
            fill(255);
            textAlign(LEFT, CENTER);
            text(angle + "°", this.x2 + 4, this.y2 + 10); 
        } else if (this.angle < 0) {
            arc(this.x2, this.y2, 40, 40, 90 + this.angle, 90);
            fill(255);
            textAlign(RIGHT, CENTER);
            text(angle + "°", this.x2 - 4, this.y2 + 10); 
        }
        
        // Pole
        stroke(140, 87, 8);
        if (this.held) { strokeWeight(6); }
        else { strokeWeight(4); }
        strokeWeight(3);
        line(this.x1, this.y1, this.x2, this.y2);
        
        // Shading on pole
        strokeWeight(1);
        if (this.angle > 0) {
            var s2 = sin(this.angle + 90);
            var c2 = cos(this.angle + 90);
            stroke(40,40,40,100);
            line(this.x1+s2, this.y1-c2, this.x2+s2, this.y2-c2);
            stroke(SUN_COL2);
            line(this.x1-s2, this.y1+c2, this.x2-s2, this.y2+c2);
        } else {
            var s2 = sin(this.angle - 90);
            var c2 = cos(this.angle - 90);
            stroke(40,40,40,100);
            line(this.x1+s2, this.y1-c2, this.x2+s2, this.y2-c2);
            stroke(SUN_COL2);
            line(this.x1-s2, this.y1+c2, this.x2-s2, this.y2+c2);
        }
    };
    
    this.select = function() {
        if (!this.draggable) { return; }
        if (mouseX >= min(this.x1, this.x2) - 2 &&
            mouseX <= max(this.x1, this.x2) + 2 && 
            mouseY >= min(this.y1, this.y2) - 2 &&
            mouseY <= max(this.y1, this.y2) + 2) {
                this.held = true;
            }
    };
    
    this.drag = function() {
        if (this.held) {
            var a = atan2(earth_y - mouseY, earth_x - mouseX);
            this.angle = constrain(a-90, -max_angle, max_angle);
            this.setPosition();
        }
    };
};

var poles = [new Pole(0, 60), new Pole(30, 60)];
poles[0].draggable = false;

/*****************************************************
 *        Main loop
*****************************************************/

var drawSunLight = function() {
    noStroke();
    fill(SUN_COL);
    
    var y = 45;
    var h = 50;
    var d = 50;
    var n = 7;
    
    for (var i=0; i<n; i++) {
        var x = 195 + (i-floor(n/2)) * d;
        rect(x-4, y, 8, h, 4);
        triangle(x-10, y+h-5, x+10, y+h-5, x, y+h+10);
    }
    
    textSize(20);
    textAlign(CENTER, BASELINE);
    text("Sun light", 200, y - 12);
};

var drawAngles = function() {
    noFill();
    strokeWeight(1);
    stroke(255);

    arc(earth_x, earth_y, earth_r*2-6, earth_r*2-6,
        poles[0].angle-90, poles[1].angle-90);
    line(earth_x, earth_y, poles[0].x1, poles[0].y1);
    line(earth_x, earth_y, poles[1].x1, poles[1].y1);
    arc(earth_x, earth_y, arc_size, arc_size,
        poles[0].angle-90, poles[1].angle-90);
    
    fill(255);
    textSize(13);
    textAlign(LEFT, CENTER);
    for (var i in poles) {
        var x1 = earth_x * 0.4 + poles[i].x1 * 0.6;
        var y1 = earth_y * 0.4 + poles[i].y1 * 0.6;
        var x2 = x1 + 4 * cos(poles[i].angle);
        var y2 = y1 + 4 * sin(poles[i].angle);
        text("r", x2, y2);   
    }
    
    textAlign(LEFT, BASELINE);
    var deg = round(10 * abs(poles[0].angle - poles[1].angle))/10;
    text("θ = " + deg + "°", earth_x + 10, earth_y);
    
    var angle = (poles[0].angle + poles[1].angle) / 2;
    var x1 = earth_x + (earth_r-5) * sin(angle);
    var y1 = earth_y - (earth_r-5) * cos(angle);
    textAlign(CENTER, TOP);
    text("d", x1, y1);
    
    angle = poles[1].angle + 0.5 * atan(poles[1].height/earth_r * tan(poles[1].angle));
    x1 = earth_x + (earth_r-5) * sin(angle);
    y1 = earth_y - (earth_r-5) * cos(angle);
    textAlign(CENTER, TOP);
    text("s", x1, y1);   
    
    textAlign(LEFT, CENTER);
    text("d = 2πrθ / 360", 32, 340);
    text("r = 360d / 2πθ ", 32, 360);
};

var draw = function() {
    background(0);
    
    noStroke();
    fill(EARTH_COL);
    ellipse(earth_x, earth_y, earth_r*2, earth_r*2);
    
    drawAngles();

    for (var i in poles) {
        poles[i].draw();
    }

    drawSunLight();
};

/*****************************************************
 *        Event Handling
*****************************************************/

var mousePressed = function() {
    for (var i in poles) { poles[i].select(); }
};

var mouseDragged = function() {
    for (var i in poles) { poles[i].drag(); }
};

var mouseReleased = function() {
    for (var i in poles) { poles[i].held = false; }
};

var mouseOut = function() {
    mouseReleased();
};