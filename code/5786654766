/************************************************
 * Drag the vertices of polygons to change their shape
 * Drag the center of polyons to move them
*************************************************/

var BACKGROUND = color(250, 250, 250);
var BLUE = color(64, 95, 237);
var PINK = color(255, 0, 175);
var GREEN = color(28, 173, 123);
var ORANGE = color(255, 165, 0);

/*************************************************
 *      DraggablePoint
**************************************************/
{
var DraggablePoint = function(x, y) {
    this.x = x;
    this.y = y;
    this.r = 6;
    this.color = ORANGE;
    this.animation = 0;
};

DraggablePoint.prototype.draw = function() {
    if (this.selected || (!this.selected && this.mouseOver())) {
        if (this.animation < 5) {
            this.animation++;
        }
        cursor(MOVE);
    } else {
        this.animation = 0;
    }

    stroke(BACKGROUND);
    strokeWeight(1);
    fill(this.color);
    
    var pr = this.r * 2 + this.animation;
    ellipse(this.x, this.y, pr, pr);
};

DraggablePoint.prototype.mouseOver = function() {
    return dist(mouseX, mouseY, this.x, this.y) <= this.r + 2;
};

DraggablePoint.prototype.move = function(dx, dy) {
    this.x += dx;
    this.y += dy;
};
}
/*************************************************
 *      Polygon
**************************************************/
{
var Polygon = function(points) {
    this.points = points.map(function(p) {
        return new DraggablePoint(p[0], p[1]);
    });
    
    this.numPoints = this.points.length;
    this.points.push(new DraggablePoint(0, 0));
    this.findCenter();
};

Polygon.prototype.draw = function() {
    strokeWeight(3);
    stroke(BLUE);
    
    var alpha = this.mouseOver() ? 120: 60;
    fill(BLUE + (alpha << 24));
    
    beginShape();
    for (var i = this.numPoints; i--;) {
        vertex(this.points[i].x, this.points[i].y);
    }
    endShape(CLOSE);
    
    this.points.forEach(function(p) {
        p.draw();
    });
};

Polygon.prototype.findCenter = function() {
    var n = this.numPoints;
    var center = this.points[n];
    center.x = 0;
    center.y = 0;
    
    for (var i = n; i--;) {
        center.x += this.points[i].x;
        center.y += this.points[i].y;
    }
    
    center.x /= n;
    center.y /= n;
};

Polygon.prototype.getEdgeVectors = function() {
    var edges = [];
    var n = this.numPoints;
    var p1, p2 = this.points[n - 1];
    
    for (var i = 0; i < n; i++) {
        p1 = this.points[i];
        edges.push({ x: p2.x - p1.x, y: p2.y - p1.y, intersections: [] });
        p2 = p1;
    }
    
    return edges;
};

// Move all the edge points, assume the center has already moved
Polygon.prototype.translatePoints = function(dx, dy) {
    for (var i = this.numPoints; i--;) {
        this.points[i].x += dx;
        this.points[i].y += dy;
    }
};

Polygon.prototype.pointInside = function(x, y) {
    var inside = false;
    var n = this.numPoints;
    var p1, p2 = this.points[n - 1];
    
    for (var i = 0; i < n; i++) {
        p1 = this.points[i];
        
        if (((p1.y > y) !== (p2.y > y)) &&
             (x < (p2.x - p1.x) * (y - p1.y) / (p2.y - p1.y) + p1.x)) {
           inside = !inside;
        }
        p2 = p1;
    }
    return inside;
};

Polygon.prototype.mouseOver = function() {
    return this.pointInside(mouseX, mouseY);
};

Polygon.prototype.mousePressed = function() {
    for (var i = this.points.length; i--;) {
        if (this.points[i].mouseOver()) {
            this.selected = this.points[i];
            this.centerSelected = (i === this.numPoints);
            break;
        }
    }
};

Polygon.prototype.mouseDragged = function() {
    if (this.selected) {
        var dx = mouseX - pmouseX;
        var dy = mouseY - pmouseY;
        this.selected.move(dx, dy);
        if (this.centerSelected) {
            this.translatePoints(dx, dy);
        } else {
            this.findCenter();
        }
    }
};

Polygon.prototype.mouseReleased = function() {
    this.selected = false;
};
}
/****************************************
 *      Create objects
****************************************/

var polygons = [
    new Polygon([[110, 80], [170, 85], [190, 160], [140, 190], [80, 130]]),
    new Polygon([[200, 220], [250, 210], [300, 260], [280, 300], [220, 320], [180, 280]])
];

/****************************************
 *      Main loop
****************************************/


var draw = function() {
    background(BACKGROUND);
    polygons.forEach(function(p) { p.draw(); });
};

/****************************************
 *      Event handling
****************************************/
{
mousePressed = function() {
    polygons.forEach(function(p) { p.mousePressed(); });
};

mouseDragged = function() {
    polygons.forEach(function(p) { p.mouseDragged(); });
};

mouseReleased = function() {
    polygons.forEach(function(p) { p.mouseReleased(); });
};

mouseOut = mouseReleased;
}
