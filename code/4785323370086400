// Testing various optimisations

noStroke();
translate(200, 200);
noiseDetail(1, 1);
rectMode(CENTER);
scale(width/400, height/400);

var p = [];

var Particle = function(x, y, z, col){
    this.x = x;
    this.y = y;
    this.z = z;
    this.col = col;
    
    this.draw = function(f, r) {
        var s = 16384/(this.z + 512); 
        f(this.col + (s<<27));
        r(this.x, this.y, s, s);
    };
    
    this.rotateZ = function(sa, ca){
        var x = this.x;
        this.x = x*ca - this.y*sa;
        this.y = x*sa + this.y*ca;
    };
    
    this.rotateX = function(sa, ca){
        var y = this.y;
        this.y = y*ca - this.z*sa;
        this.z = y*sa + this.z*ca;
    };
    
    this.rotateY = function(sa, ca){
        var z = this.z;
        this.z = z*ca - this.x*sa;
        this.x = z*sa + this.x*ca;
    };
    
    p.push(this);
};

var init = function() {
    for (var i = 0; i < 2500; i++){
        var rad = random(128, 160);//radial
        var azim = acos(random(-1, 1));//azimuthal
        var pol = random(360);//polar
        
        var sa = sin(azim);
        var x = rad * cos(pol) * sa;
        var y = rad * sin(pol) * sa;
        var z = rad * cos(azim);
        
        var col = abs(z) > 96 ? color(220, 220, random(200, 255)) : 
        (noise(azim/48, pol/48) > 0.5 ? color(random(128, 220), 255, 0) : color(0, 128, 255));
        
        new Particle(x, y, z, col);
    }
    
    return true;
};

var inited = false;
var timeM = millis();
var timeD = 0;

draw = function() {
    background(48);

    if (!inited) {
        inited = init();
        return;
    }
    
    if (frameCount % 120 === 0) {
        var t2 = millis();
        timeD = t2 - timeM;
        timeM = t2;
    }
    
    var t = frameCount/128;
    var rx = ~~(noise(t)*32-16)/2;
    var ry = ~~(noise(0, t)*32-16)/2;
    var rz = ~~(noise(-t, 0, t)*32-16)/2;
    
    var sx = sin(rx);
    var cx = cos(rx);
    var sy = sin(ry);
    var cy = cos(ry);
    var sz = sin(rz);
    var cz = cos(rz);
    
    var f = this.fill;
    var r = this.rect;
    var pr = p;
    var p2, s;
    
    for (var i = 0; i < pr.length; i++){
        p2 = pr[i];
        //p2.draw(f, r);
        if (rx) { p2.rotateX(sx, cx); }
        if (ry) { p2.rotateY(sy, cy); }
        if (rz) { p2.rotateZ(sz, cz); }
        
        // Draw
        if (p2.z > 0) {
            s = 7168/(p2.z+512); 
            f(p2.col + (s<<27));
            r(p2.x, p2.y, s, s);
        }
    }
    
    fill(255);
    text(timeD, -190, -180);
};


