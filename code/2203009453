
// Centre of system
var cx = 200;
var cy = 200;

// Size of epicyles
var radius1 = 160;
var radius2 = radius1 * (sqrt(2) - 1) / (sqrt(2) + 1) - 9;

// Speed of orbits
var speed1 = 0.5;
var speed2 = -3 * speed1;

// Starting angles
var angle1 = 0;
var angle2 = 180;

var previousPoints = [];
var plotGap = 4;
var maxPoints = 360 / (abs(speed1) * plotGap);

// Initial positions
var x1 = cx + radius1 * cos(angle1);
var y1 = cy + radius1 * sin(angle1);
var x2 = x1 + radius2 * cos(angle2);
var y2 = y1 + radius2 * sin(angle2);

var running = true;
var t = 0;

var draw = function() {
    if (running) {
        t++;
        if (t % 4 === 0) {
            previousPoints.push([x2, y2]);
            if (previousPoints.length > maxPoints) {
                previousPoints.shift();
            }   
        }
        
        angle1 += speed1;
        angle2 += speed2;
        
        x1 = cx + radius1 * cos(angle1);
        y1 = cy + radius1 * sin(angle1);
        x2 = x1 + radius2 * cos(angle2);
        y2 = y1 + radius2 * sin(angle2);
    }
    
    background(0);
        
    // Previous points
    noStroke();
    fill(20, 160, 20, 100);
    for (var p in previousPoints) {
        var coord = previousPoints[p];
        ellipse(coord[0], coord[1], 9, 9);
    }
    
    // Cycles
    noFill();
    strokeWeight(2);
    stroke(120, 120, 240);
    ellipse(cx, cy, radius1*2, radius1*2);
    
    stroke(20, 160, 20);
    ellipse(x1, y1, radius2*2, radius2*2);
    
    // Cycle centres
    noStroke();
    fill(240, 240, 60);
    ellipse(cx, cy, 15, 15);
    
    fill(120, 120, 240);
    ellipse(x1, y1, 5, 5);
    
    strokeWeight(1);
    stroke(255);
    fill(20, 160, 20);
    ellipse(x2, y2, 9, 9);
};

var keyPressed = function() {
    // Spacebar toggles animation
    if (keyCode === 32) { running = !running; }
};