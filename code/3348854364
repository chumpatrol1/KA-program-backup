
var crankX = 200;
var crankY = 200;
var handleLength = 120;
var handleAngle = 0;
var totalAngle = 0;
var handleR = 10;

var holdingHandle = false;

draw = function() {
    background(255);
    
    stroke(40);
    strokeWeight(2);
    fill(200, 210, 220);
    
    pushMatrix();
    translate(crankX, crankY);
    rotate(handleAngle);
    
    // Handle
    rect(0, -10, handleLength, 20, 10);
    if (holdingHandle) { fill(255, 0, 0); }
    ellipse(handleLength - 10, 0, handleR, handleR);
    
    // Shaft
    fill(200, 210, 220);
    ellipse(0, 0, 50, 50);
    for (var theta = 0; theta < 360; theta += 20) {
        var ca = cos(theta);
        var sa = sin(theta);
        line(ca * 15, sa * 15, ca * 22, sa * 22);
    }
    
    popMatrix();
    
    
    fill(0);
    textSize(20);
    textAlign(LEFT, TOP);
    //text(handleAngle, 10, 5);
    text(totalAngle, 10, 5);
    
    // Update angle
    if (!holdingHandle) {
        if (abs(totalAngle) < 1) {
            handleAngle = 0;
            totalAngle = 0;
        } else {
            handleAngle -= Math.sign(totalAngle); 
            totalAngle -= Math.sign(totalAngle); 
        }
    }
};

mousePressed = function() {
    // Position of handle end
    var x = crankX + (handleLength - 10) * cos(handleAngle);
    var y = crankY + (handleLength - 10) * sin(handleAngle);
    
    if (dist(mouseX, mouseY, x, y) < 10) {
        holdingHandle = true;
    }
};

mouseDragged = function() {
    // Calculate angle of drag
    var newAngle = atan2(mouseY - crankY, mouseX - crankX);

    // Calculate change in angle   
    var d = newAngle - handleAngle;
    d += (d > 180) ? -360 : (d < -180) ? 360 : 0;
    
    totalAngle += d;
    handleAngle = newAngle;
};

mouseReleased = function() {
    holdingHandle = false;
};
