var SEACOLOUR = color(140, 210, 235);
var LANDCOLOUR = color(240, 220, 190);

var ENGLAND = color(85, 55, 185);
var FRANCE = color(155, 155, 185);
var ITALY = color(25, 175, 15);
var HUNGARY = color(220, 40, 15);
var GERMANY = color(95, 60, 25);
var TURKEY = color(200, 200, 15);
var RUSSIA = color(84, 67, 67);

scale(0.66, 0.66);
translate(2, 23);

stroke(0, 0, 0);
strokeWeight(1);
fill(SEACOLOUR);

//Tyrrhenian Sea
beginShape();
vertex(238, 431);
vertex(247, 442);
vertex(248, 447);
vertex(256, 458);
vertex(271, 464);
vertex(276, 474);
vertex(290, 487);
vertex(294, 502);
vertex(289, 511);
vertex(285, 511);
vertex(285, 508);
vertex(276, 510);
vertex(263, 510);
vertex(257, 507);
vertex(252, 508);
vertex(247, 513);
vertex(236, 524);
vertex(233, 523);
vertex(224, 527);
vertex(223, 518);
vertex(218, 516);
vertex(218, 490);
vertex(220, 490);
vertex(224, 468);
vertex(222, 458);
vertex(218, 458);
vertex(218, 454);
vertex(223, 450);
vertex(225, 444);
vertex(225, 436);
vertex(224, 431);
vertex(238, 431);
endShape();

//Helgoland Bight
beginShape();
vertex(245, 237);
vertex(243, 247);
vertex(244, 254);
vertex(243, 257);
vertex(245, 263);
vertex(244, 270);
vertex(244, 273);
vertex(235, 277);
vertex(234, 274);
vertex(230, 273);
vertex(226, 275);
vertex(211, 274);
vertex(211, 237);
vertex(245, 237);
endShape();

//Aegean Sea
beginShape();
vertex(376, 537);
vertex(371, 520);
vertex(378, 521);
vertex(377, 513);
vertex(386, 516);
vertex(385, 509);
vertex(370, 494);
vertex(371, 491);
vertex(378, 494);
vertex(368, 483);
vertex(371, 477);
vertex(379, 484);
vertex(382, 483);
vertex(381, 477);
vertex(386, 478);
vertex(380, 472);
vertex(392, 472);
vertex(400, 468);
vertex(408, 470);
vertex(410, 473);
vertex(414, 475);
vertex(410, 482);
vertex(409, 487);
vertex(417, 486);
vertex(417, 489);
vertex(420, 495);
vertex(417, 498);
vertex(417, 507);
vertex(423, 510);
vertex(427, 524);
vertex(435, 523);
vertex(435, 530);
vertex(416, 549);
vertex(412, 547);
vertex(387, 546);
vertex(383, 544);
vertex(376, 537);
endShape();

//Gulf of Bothnia
beginShape();
vertex(311, 220);
vertex(314, 209);
vertex(322, 206);
vertex(328, 203);
vertex(331, 193);
vertex(326, 183);
vertex(320, 182);
vertex(321, 161);
vertex(330, 146);
vertex(343, 138);
vertex(351, 128);
vertex(347, 121);
vertex(349, 112);
vertex(355, 104);
vertex(362, 107);
vertex(368, 108);
vertex(372, 120);
vertex(366, 121);
vertex(359, 136);
vertex(345, 151);
vertex(347, 160);
vertex(350, 165);
vertex(348, 178);
vertex(349, 184);
vertex(357, 186);
vertex(365, 191);
vertex(384, 185);
vertex(402, 177);
vertex(403, 183);
vertex(411, 184);
vertex(414, 187);
vertex(408, 187);
vertex(400, 192);
vertex(399, 197);
vertex(387, 196);
vertex(371, 198);
vertex(369, 202);
vertex(365, 204);
vertex(368, 210);
vertex(372, 213);
vertex(373, 221);
vertex(377, 227);
vertex(373, 229);
vertex(366, 228);
vertex(359, 220);
vertex(311, 220);
endShape();

//Western Mediterranean
beginShape();
vertex(37, 490);
vertex(47, 488);
vertex(52, 489);
vertex(60, 486);
vertex(78, 491);
vertex(83, 494);
vertex(86, 485);
vertex(90, 483);
vertex(98, 484);
vertex(107, 474);
vertex(113, 473);
vertex(115, 469);
vertex(142, 469);
vertex(150, 471);
vertex(154, 466);
vertex(205, 466);
vertex(206, 476);
vertex(204, 485);
vertex(208, 492);
vertex(212, 492);
vertex(217, 489);
vertex(218, 490);
vertex(218, 516);
vertex(212, 517);
vertex(208, 521);
vertex(203, 520);
vertex(179, 515);
vertex(169, 518);
vertex(150, 511);
vertex(117, 509);
vertex(106, 511);
vertex(99, 515);
vertex(89, 512);
vertex(84, 518);
vertex(79, 520);
vertex(68, 516);
vertex(68, 511);
vertex(64, 514);
vertex(46, 509);
vertex(42, 502);
vertex(41, 494);
vertex(37, 495);
vertex(37, 490);
endShape();

//Norwegian Sea
beginShape();
vertex(362, 33);
vertex(357, 39);
vertex(343, 44);
vertex(324, 54);
vertex(320, 64);
vertex(310, 75);
vertex(309, 84);
vertex(303, 86);
vertex(292, 111);
vertex(277, 132);
vertex(269, 134);
vertex(264, 142);
vertex(258, 141);
vertex(236, 154);
vertex(198, 154);
vertex(171, 181);
vertex(171, 197);
vertex(158, 193);
vertex(152, 194);
vertex(154, 188);
vertex(161, 185);
vertex(162, 181);
vertex(148, 177);
vertex(148, 0);
vertex(362, 0);
vertex(362, 33);
endShape();

//North Sea
beginShape();
vertex(171, 197);
vertex(171, 181);
vertex(198, 154);
vertex(241, 154);
vertex(241, 224);
vertex(248, 224);
vertex(245, 237);
vertex(211, 237);
vertex(211, 301);
vertex(173, 301);
vertex(165, 293);
vertex(140, 197);
vertex(171, 197);
endShape();

//Constantinople
beginShape();
vertex(414, 475);
vertex(421, 467);
vertex(435, 463);
vertex(440, 458);
vertex(442, 460);
vertex(439, 463);
vertex(448, 464);
vertex(425, 475);
vertex(414, 475);
endShape();

//Eastern Mediterranean
beginShape();
vertex(435, 530);
vertex(441, 526);
vertex(447, 528);
vertex(453, 534);
vertex(464, 531);
vertex(466, 521);
vertex(475, 520);
vertex(485, 528);
vertex(491, 530);
vertex(505, 526);
vertex(511, 514);
vertex(520, 517);
vertex(527, 508);
vertex(530, 509);
vertex(525, 518);
vertex(526, 530);
vertex(532, 535);
vertex(528, 559);
vertex(400, 559);
vertex(400, 554);
vertex(414, 552);
vertex(416, 549);
vertex(435, 530);
endShape();



//Ionian Sea
beginShape();
vertex(289, 511);
vertex(290, 514);
vertex(295, 515);
vertex(308, 500);
vertex(311, 491);
vertex(304, 484);
vertex(310, 480);
vertex(318, 485);
vertex(322, 485);
vertex(322, 480);
vertex(335, 480);
vertex(339, 487);
vertex(346, 498);
vertex(350, 498);
vertex(347, 500);
vertex(352, 508);
vertex(367, 507);
vertex(371, 511);
vertex(355, 510);
vertex(350, 514);
vertex(357, 521);
vertex(359, 533);
vertex(360, 528);
vertex(367, 536);
vertex(368, 531);
vertex(376, 537);
vertex(383, 544);
vertex(380, 547);
vertex(383, 550);
vertex(400, 554);
vertex(400, 559);
vertex(232, 559);
vertex(234, 551);
vertex(232, 544);
vertex(225, 535);
vertex(231, 531);
vertex(236, 524);
vertex(247, 513);
vertex(258, 519);
vertex(273, 531);
vertex(281, 532);
vertex(282, 521);
vertex(285, 513);
vertex(285, 511);
vertex(289, 511);
endShape();

//English Channel
beginShape();
vertex(173, 301);
vertex(169, 311);
vertex(153, 315);
vertex(155, 320);
vertex(150, 319);
vertex(144, 318);
vertex(142, 312);
vertex(136, 310);
vertex(136, 326);
vertex(124, 323);
vertex(122, 318);
vertex(102, 317);
vertex(88, 303);
vertex(100, 291);
vertex(110, 292);
vertex(120, 295);
vertex(124, 291);
vertex(134, 294);
vertex(147, 295);
vertex(160, 298);
vertex(168, 296);
vertex(173, 301);
endShape();

//Irish Sea
beginShape();
vertex(100, 291);
vertex(112, 287);
vertex(122, 281);
vertex(130, 282);
vertex(127, 276);
vertex(119, 272);
vertex(116, 272);
vertex(115, 265);
vertex(128, 262);
vertex(126, 256);
vertex(121, 257);
vertex(132, 250);
vertex(135, 250);
vertex(139, 240);
vertex(136, 229);
vertex(130, 227);
vertex(120, 227);
vertex(110, 232);
vertex(109, 246);
vertex(98, 259);
vertex(87, 257);
vertex(70, 261);
vertex(58, 273);
vertex(88, 303);
vertex(100, 291);
endShape();

//Barents Sea
beginShape();
vertex(540, 0);
vertex(535, 9);
vertex(530, 6);
vertex(517, 19);
vertex(516, 33);
vertex(513, 38);
vertex(513, 23);
vertex(507, 20);
vertex(505, 26);
vertex(499, 33);
vertex(492, 48);
vertex(495, 58);
vertex(488, 60);
vertex(479, 57);
vertex(477, 55);
vertex(481, 50);
vertex(473, 43);
vertex(466, 45);
vertex(472, 62);
vertex(478, 66);
vertex(478, 74);
vertex(472, 72);
vertex(468, 74);
vertex(457, 91);
vertex(469, 100);
vertex(467, 106);
vertex(462, 109);
vertex(444, 101);
vertex(442, 110);
vertex(447, 115);
vertex(454, 119);
vertex(452, 122);
vertex(434, 118);
vertex(426, 103);
vertex(426, 94);
vertex(414, 88);
vertex(412, 83);
vertex(445, 84);
vertex(457, 79);
vertex(459, 66);
vertex(453, 61);
vertex(417, 47);
vertex(405, 49);
vertex(401, 45);
vertex(397, 48);
vertex(391, 47);
vertex(395, 41);
vertex(394, 38);
vertex(384, 33);
vertex(382, 40);
vertex(380, 33);
vertex(377, 31);
vertex(374, 38);
vertex(371, 33);
vertex(366, 42);
vertex(366, 33);
vertex(362, 33);
vertex(362, 0);
vertex(540, 0);
endShape();

//Gulf of Lyon
beginShape();
vertex(115, 469);
vertex(110, 461);
vertex(124, 444);
vertex(131, 439);
vertex(146, 438);
vertex(157, 432);
vertex(158, 425);
vertex(158, 418);
vertex(169, 412);
vertex(176, 417);
vertex(188, 422);
vertex(198, 421);
vertex(211, 416);
vertex(222, 410);
vertex(233, 415);
vertex(238, 431);
vertex(224, 431);
vertex(221, 434);
vertex(211, 436);
vertex(213, 451);
vertex(218, 454);
vertex(218, 458);
vertex(214, 461);
vertex(206, 462);
vertex(205, 466);
vertex(154, 466);
vertex(148, 463);
vertex(142, 469);
vertex(115, 469);
endShape();

//Skagerrak
beginShape();
vertex(241, 209);
vertex(246, 210);
vertex(266, 201);
vertex(270, 193);
vertex(275, 203);
vertex(277, 218);
vertex(276, 224);
vertex(282, 236);
vertex(279, 240);
vertex(279, 243);
vertex(275, 242);
vertex(269, 243);
vertex(266, 240);
vertex(267, 234);
vertex(266, 221);
vertex(263, 223);
vertex(248, 224);
vertex(241, 224);
vertex(241, 209);
endShape();

//Adriatic Sea
beginShape();
vertex(322, 480);
vertex(297, 456);
vertex(300, 453);
vertex(290, 453);
vertex(278, 443);
vertex(272, 424);
vertex(260, 417);
vertex(261, 401);
vertex(270, 398);
vertex(276, 399);
vertex(275, 403);
vertex(278, 410);
vertex(282, 401);
vertex(286, 402);
vertex(289, 418);
vertex(306, 436);
vertex(331, 454);
vertex(331, 477);
vertex(335, 480);
vertex(322, 480);
endShape();

//North Atlantic Ocean
beginShape();
vertex(70, 261);
vertex(64, 250);
vertex(67, 242);
vertex(71, 245);
vertex(81, 234);
vertex(74, 228);
vertex(80, 225);
vertex(78, 218);
vertex(82, 217);
vertex(89, 220);
vertex(94, 220);
vertex(95, 218);
vertex(94, 216);
vertex(97, 216);
vertex(101, 212);
vertex(110, 212);
vertex(119, 217);
vertex(120, 227);
vertex(130, 227);
vertex(130, 223);
vertex(138, 217);
vertex(138, 214);
vertex(130, 208);
vertex(129, 197);
vertex(139, 189);
vertex(140, 182);
vertex(148, 177);
vertex(148, 0);
vertex(0, 0);
vertex(0, 273);
vertex(58, 273);
vertex(70, 261);
endShape();

//Mid-Atlantic_Ocean
beginShape();
vertex(102, 317);
vertex(100, 322);
vertex(103, 328);
vertex(109, 329);
vertex(123, 344);
vertex(122, 350);
vertex(123, 357);
vertex(128, 363);
vertex(121, 382);
vertex(122, 384);
vertex(112, 399);
vertex(101, 396);
vertex(96, 397);
vertex(72, 384);
vertex(59, 381);
vertex(54, 375);
vertex(48, 374);
vertex(46, 378);
vertex(39, 375);
vertex(33, 381);
vertex(35, 384);
vertex(32, 396);
vertex(30, 406);
vertex(17, 427);
vertex(14, 427);
vertex(10, 433);
vertex(13, 440);
vertex(15, 441);
vertex(12, 450);
vertex(13, 454);
vertex(8, 462);
vertex(19, 469);
vertex(27, 468);
vertex(33, 475);
vertex(34, 484);
vertex(37, 490);
vertex(37, 495);
vertex(33, 496);
vertex(17, 518);
vertex(0, 520);
vertex(0, 273);
vertex(58, 273);
vertex(102, 317);
endShape();

//Baltic Sea
beginShape();
vertex(266, 255);
vertex(271, 260);
vertex(278, 254);
vertex(277, 250);
vertex(280, 248);
vertex(279, 243);
vertex(282, 253);
vertex(289, 254);
vertex(294, 245);
vertex(305, 244);
vertex(312, 229);
vertex(311, 220);
vertex(359, 220);
vertex(349, 229);
vertex(347, 243);
vertex(347, 248);
vertex(348, 254);
vertex(344, 262);
vertex(337, 264);
vertex(334, 273);
vertex(328, 274);
vertex(326, 265);
vertex(314, 266);
vertex(307, 273);
vertex(294, 275);
vertex(286, 274);
vertex(287, 267);
vertex(280, 266);
vertex(266, 275);
vertex(261, 274);
vertex(260, 269);
vertex(256, 266);
vertex(256, 263);
vertex(254, 255);
vertex(266, 255);
endShape();
fill(LANDCOLOUR);

//Bulgaria
beginShape();
vertex(371, 438);
vertex(366, 439);
vertex(371, 456);
vertex(365, 461);
vertex(369, 464);
vertex(376, 464);
vertex(388, 460);
vertex(392, 472);
vertex(400, 468);
vertex(408, 470);
vertex(413, 464);
vertex(412, 454);
vertex(420, 451);
vertex(426, 450);
vertex(422, 441);
vertex(425, 427);
vertex(429, 426);
vertex(430, 423);
vertex(422, 420);
vertex(410, 420);
vertex(404, 422);
vertex(398, 427);
vertex(390, 425);
vertex(382, 427);
vertex(375, 423);
vertex(370, 425);
vertex(367, 421);
vertex(365, 425);
vertex(368, 433);
vertex(371, 438);
endShape();

//Norway
beginShape();
vertex(397, 48);
vertex(391, 47);
vertex(395, 41);
vertex(394, 38);
vertex(384, 33);
vertex(382, 40);
vertex(380, 33);
vertex(377, 31);
vertex(374, 38);
vertex(371, 33);
vertex(366, 42);
vertex(366, 33);
vertex(362, 33);
vertex(357, 39);
vertex(343, 44);
vertex(324, 54);
vertex(320, 64);
vertex(310, 75);
vertex(309, 84);
vertex(303, 86);
vertex(292, 111);
vertex(277, 132);
vertex(269, 134);
vertex(264, 142);
vertex(258, 141);
vertex(236, 154);
vertex(237, 160);
vertex(233, 167);
vertex(231, 180);
vertex(233, 186);
vertex(229, 192);
vertex(231, 201);
vertex(241, 209);
vertex(246, 210);
vertex(266, 201);
vertex(270, 193);
vertex(275, 203);
vertex(279, 204);
vertex(287, 177);
vertex(285, 170);
vertex(290, 164);
vertex(292, 133);
vertex(301, 132);
vertex(300, 126);
vertex(309, 115);
vertex(308, 104);
vertex(311, 101);
vertex(324, 71);
vertex(332, 74);
vertex(330, 64);
vertex(341, 65);
vertex(342, 61);
vertex(346, 54);
vertex(355, 62);
vertex(369, 61);
vertex(370, 49);
vertex(379, 48);
vertex(388, 54);
vertex(386, 58);
vertex(388, 61);
vertex(397, 48);
endShape();

//Portugal
beginShape();
vertex(32, 396);
vertex(30, 406);
vertex(17, 427);
vertex(14, 427);
vertex(10, 433);
vertex(13, 440);
vertex(15, 441);
vertex(12, 450);
vertex(13, 454);
vertex(8, 462);
vertex(19, 469);
vertex(27, 468);
vertex(36, 457);
vertex(34, 447);
vertex(40, 441);
vertex(37, 431);
vertex(42, 432);
vertex(52, 412);
vertex(61, 411);
vertex(62, 407);
vertex(55, 400);
vertex(42, 399);
vertex(43, 395);
vertex(32, 396);
endShape();

//Spain
beginShape();
vertex(134, 417);
vertex(123, 412);
vertex(113, 407);
vertex(112, 399);
vertex(101, 396);
vertex(96, 397);
vertex(72, 384);
vertex(59, 381);
vertex(54, 375);
vertex(48, 374);
vertex(46, 378);
vertex(39, 375);
vertex(33, 381);
vertex(35, 384);
vertex(32, 396);
vertex(43, 395);
vertex(42, 399);
vertex(55, 400);
vertex(62, 407);
vertex(61, 411);
vertex(52, 412);
vertex(42, 432);
vertex(37, 431);
vertex(40, 441);
vertex(34, 447);
vertex(36, 457);
vertex(27, 468);
vertex(33, 475);
vertex(34, 484);
vertex(37, 490);
vertex(47, 488);
vertex(52, 489);
vertex(60, 486);
vertex(78, 491);
vertex(83, 494);
vertex(86, 485);
vertex(90, 483);
vertex(98, 484);
vertex(107, 474);
vertex(113, 473);
vertex(115, 469);
vertex(110, 461);
vertex(124, 444);
vertex(131, 439);
vertex(146, 438);
vertex(157, 432);
vertex(158, 425);
vertex(154, 427);
vertex(142, 417);
vertex(135, 414);
vertex(134, 417);
vertex(123, 412);
vertex(134, 417);
endShape();

//Belgium
beginShape();
vertex(191, 299);
vertex(194, 303);
vertex(206, 306);
vertex(205, 311);
vertex(208, 315);
vertex(210, 326);
vertex(205, 331);
vertex(192, 323);
vertex(184, 315);
vertex(169, 311);
vertex(173, 301);
vertex(191, 299);
endShape();

//Ukraine
beginShape();
vertex(383, 327);
vertex(385, 332);
vertex(399, 338);
vertex(404, 354);
vertex(403, 360);
vertex(411, 361);
vertex(414, 372);
vertex(423, 376);
vertex(432, 372);
vertex(434, 360);
vertex(445, 350);
vertex(460, 345);
vertex(466, 307);
vertex(470, 303);
vertex(468, 295);
vertex(456, 292);
vertex(390, 306);
vertex(386, 309);
vertex(383, 327);
endShape();

//Holland
beginShape();
vertex(226, 275);
vertex(227, 280);
vertex(225, 292);
vertex(220, 298);
vertex(215, 297);
vertex(213, 302);
vertex(210, 313);
vertex(208, 315);
vertex(205, 311);
vertex(206, 306);
vertex(194, 303);
vertex(191, 299);
vertex(198, 289);
vertex(205, 276);
vertex(205, 279);
vertex(207, 279);
vertex(211, 274);
vertex(226, 275);
endShape();

//Denmark
beginShape();
vertex(279, 243);
vertex(275, 242);
vertex(269, 243);
vertex(266, 240);
vertex(267, 234);
vertex(266, 221);
vertex(263, 223);
vertex(248, 224);
vertex(245, 237);
vertex(243, 247);
vertex(244, 254);
vertex(254, 255);
vertex(266, 255);
vertex(271, 260);
vertex(278, 254);
vertex(277, 250);
vertex(280, 248);
vertex(279, 243);
endShape();

//Finland
beginShape();
vertex(362, 107);
vertex(368, 108);
vertex(372, 120);
vertex(366, 121);
vertex(359, 136);
vertex(345, 151);
vertex(347, 160);
vertex(350, 165);
vertex(348, 178);
vertex(349, 184);
vertex(357, 186);
vertex(365, 191);
vertex(384, 185);
vertex(402, 177);
vertex(412, 161);
vertex(410, 152);
vertex(414, 147);
vertex(410, 130);
vertex(402, 118);
vertex(401, 110);
vertex(392, 92);
vertex(393, 73);
vertex(387, 68);
vertex(388, 61);
vertex(386, 58);
vertex(388, 54);
vertex(379, 48);
vertex(370, 49);
vertex(369, 61);
vertex(355, 62);
vertex(346, 54);
vertex(342, 61);
vertex(356, 71);
vertex(362, 107);
endShape();

//Sweden
beginShape();
vertex(275, 203);
vertex(277, 218);
vertex(276, 224);
vertex(282, 236);
vertex(279, 240);
vertex(279, 243);
vertex(282, 253);
vertex(289, 254);
vertex(294, 245);
vertex(305, 244);
vertex(312, 229);
vertex(311, 220);
vertex(314, 209);
vertex(322, 206);
vertex(328, 203);
vertex(331, 193);
vertex(326, 183);
vertex(320, 182);
vertex(321, 161);
vertex(330, 146);
vertex(343, 138);
vertex(351, 128);
vertex(347, 121);
vertex(349, 112);
vertex(355, 104);
vertex(362, 107);
vertex(356, 71);
vertex(342, 61);
vertex(341, 65);
vertex(330, 64);
vertex(332, 74);
vertex(324, 71);
vertex(311, 101);
vertex(308, 104);
vertex(309, 115);
vertex(300, 126);
vertex(301, 132);
vertex(292, 133);
vertex(290, 164);
vertex(285, 170);
vertex(287, 177);
vertex(279, 204);
vertex(275, 203);
endShape();

//Tunis
beginShape();
vertex(232, 559);
vertex(234, 551);
vertex(232, 544);
vertex(225, 535);
vertex(231, 531);
vertex(236, 524);
vertex(233, 523);
vertex(224, 527);
vertex(223, 518);
vertex(218, 516);
vertex(212, 517);
vertex(208, 521);
vertex(203, 520);
vertex(197, 527);
vertex(195, 559);
vertex(232, 559);
endShape();

//Switzerland
beginShape();
vertex(209, 363);
vertex(208, 367);
vertex(194, 382);
vertex(197, 385);
vertex(203, 379);
vertex(207, 386);
vertex(213, 387);
vertex(221, 385);
vertex(227, 390);
vertex(229, 385);
vertex(243, 388);
vertex(245, 384);
vertex(241, 378);
vertex(234, 374);
vertex(234, 366);
vertex(232, 363);
vertex(225, 362);
vertex(222, 365);
vertex(209, 363);
endShape();

//Albania
beginShape();
vertex(331, 454);
vertex(331, 477);
vertex(335, 480);
vertex(339, 487);
vertex(350, 477);
vertex(350, 471);
vertex(346, 466);
vertex(346, 452);
vertex(337, 446);
vertex(330, 445);
vertex(331, 454);
endShape();

//Serbia
beginShape();
vertex(365, 412);
vertex(360, 413);
vertex(342, 410);
vertex(338, 412);
vertex(335, 410);
vertex(332, 410);
vertex(330, 416);
vertex(331, 424);
vertex(327, 429);
vertex(330, 437);
vertex(337, 446);
vertex(346, 452);
vertex(346, 466);
vertex(350, 471);
vertex(356, 471);
vertex(361, 467);
vertex(369, 464);
vertex(365, 461);
vertex(371, 456);
vertex(366, 439);
vertex(371, 438);
vertex(368, 433);
vertex(365, 425);
vertex(367, 421);
vertex(365, 412);
endShape();

//North Africa
beginShape();
vertex(203, 520);
vertex(179, 515);
vertex(169, 518);
vertex(150, 511);
vertex(117, 509);
vertex(106, 511);
vertex(99, 515);
vertex(89, 512);
vertex(84, 518);
vertex(79, 520);
vertex(68, 516);
vertex(68, 511);
vertex(64, 514);
vertex(46, 509);
vertex(42, 502);
vertex(41, 494);
vertex(37, 495);
vertex(33, 496);
vertex(17, 518);
vertex(0, 520);
vertex(0, 559);
vertex(195, 559);
vertex(197, 527);
vertex(203, 520);
endShape();

//Rumania
beginShape();
vertex(403, 360);
vertex(404, 371);
vertex(394, 376);
vertex(395, 382);
vertex(401, 385);
vertex(406, 396);
vertex(401, 402);
vertex(387, 402);
vertex(367, 406);
vertex(365, 412);
vertex(367, 421);
vertex(370, 425);
vertex(375, 423);
vertex(382, 427);
vertex(390, 425);
vertex(398, 427);
vertex(404, 422);
vertex(410, 420);
vertex(422, 420);
vertex(430, 423);
vertex(432, 409);
vertex(439, 404);
vertex(438, 397);
vertex(427, 399);
vertex(422, 382);
vertex(423, 376);
vertex(414, 372);
vertex(411, 361);
vertex(403, 360);
endShape();

//Livonia
beginShape();
vertex(369, 202);
vertex(365, 204);
vertex(368, 210);
vertex(372, 213);
vertex(373, 221);
vertex(377, 227);
vertex(373, 229);
vertex(366, 228);
vertex(359, 220);
vertex(349, 229);
vertex(347, 243);
vertex(354, 251);
vertex(356, 261);
vertex(362, 260);
vertex(367, 265);
vertex(365, 281);
vertex(372, 283);
vertex(379, 290);
vertex(389, 285);
vertex(392, 278);
vertex(404, 275);
vertex(405, 239);
vertex(409, 228);
vertex(405, 217);
vertex(394, 205);
vertex(382, 206);
vertex(372, 205);
vertex(369, 202);
endShape();

//Greece
beginShape();
vertex(339, 487);
vertex(346, 498);
vertex(350, 498);
vertex(347, 500);
vertex(352, 508);
vertex(367, 507);
vertex(371, 511);
vertex(355, 510);
vertex(350, 514);
vertex(357, 521);
vertex(359, 533);
vertex(360, 528);
vertex(367, 536);
vertex(368, 531);
vertex(376, 537);
vertex(371, 520);
vertex(378, 521);
vertex(377, 513);
vertex(386, 516);
vertex(385, 509);
vertex(370, 494);
vertex(371, 491);
vertex(378, 494);
vertex(368, 483);
vertex(371, 477);
vertex(379, 484);
vertex(382, 483);
vertex(381, 477);
vertex(386, 478);
vertex(380, 472);
vertex(392, 472);
vertex(388, 460);
vertex(376, 464);
vertex(369, 464);
vertex(361, 467);
vertex(356, 471);
vertex(350, 471);
vertex(350, 477);
vertex(339, 487);
endShape();

//Warsaw
beginShape();
vertex(333, 330);
vertex(326, 327);
vertex(323, 322);
vertex(320, 303);
vertex(324, 299);
vertex(326, 292);
vertex(341, 287);
vertex(345, 289);
vertex(359, 286);
vertex(365, 281);
vertex(372, 283);
vertex(379, 290);
vertex(386, 309);
vertex(383, 327);
vertex(379, 324);
vertex(374, 327);
vertex(367, 329);
vertex(361, 324);
vertex(356, 323);
vertex(353, 327);
vertex(344, 332);
vertex(341, 330);
vertex(333, 330);
endShape();

var drawEngland = function() {
    fill(ENGLAND);
    
    //Clyde
    beginShape();
    vertex(138, 214);
    vertex(130, 208);
    vertex(129, 197);
    vertex(139, 189);
    vertex(140, 182);
    vertex(148, 177);
    vertex(162, 181);
    vertex(161, 185);
    vertex(154, 188);
    vertex(152, 194);
    vertex(146, 200);
    vertex(144, 213);
    vertex(138, 214);
    endShape();
    
    //London
    beginShape();
    vertex(166, 269);
    vertex(168, 270);
    vertex(171, 268);
    vertex(177, 270);
    vertex(178, 274);
    vertex(176, 283);
    vertex(165, 293);
    vertex(172, 294);
    vertex(168, 296);
    vertex(160, 298);
    vertex(147, 295);
    vertex(145, 281);
    vertex(150, 277);
    vertex(153, 271);
    vertex(166, 269);
    endShape();
    
    //Yorkshire
    beginShape();
    vertex(163, 226);
    vertex(163, 239);
    vertex(168, 246);
    vertex(170, 252);
    vertex(169, 265);
    vertex(166, 269);
    vertex(153, 271);
    vertex(150, 264);
    vertex(151, 248);
    vertex(155, 239);
    vertex(155, 228);
    vertex(163, 226);
    endShape();
    
    //Edinburgh
    beginShape();
    vertex(152, 194);
    vertex(158, 193);
    vertex(171, 197);
    vertex(170, 202);
    vertex(165, 210);
    vertex(158, 214);
    vertex(151, 215);
    vertex(157, 216);
    vertex(161, 218);
    vertex(163, 226);
    vertex(155, 228);
    vertex(145, 217);
    vertex(144, 213);
    vertex(146, 200);
    vertex(152, 194);
    endShape();
    
    //Liverpool
    beginShape();
    vertex(128, 262);
    vertex(126, 256);
    vertex(121, 257);
    vertex(132, 250);
    vertex(135, 250);
    vertex(139, 240);
    vertex(136, 229);
    vertex(130, 227);
    vertex(130, 223);
    vertex(138, 217);
    vertex(138, 214);
    vertex(144, 213);
    vertex(145, 217);
    vertex(155, 228);
    vertex(155, 239);
    vertex(151, 248);
    vertex(150, 264);
    vertex(143, 262);
    vertex(128, 262);
    endShape();
    
    //Wales
    beginShape();
    vertex(100, 291);
    vertex(112, 287);
    vertex(122, 281);
    vertex(130, 282);
    vertex(127, 276);
    vertex(119, 272);
    vertex(116, 272);
    vertex(115, 265);
    vertex(128, 262);
    vertex(143, 262);
    vertex(150, 264);
    vertex(153, 271);
    vertex(150, 277);
    vertex(145, 281);
    vertex(147, 295);
    vertex(134, 294);
    vertex(124, 291);
    vertex(120, 295);
    vertex(110, 292);
    vertex(100, 291);
    endShape();
};

var drawFrance = function() {
    fill(FRANCE);
    
    //Picardy
    beginShape();
    vertex(169, 311);
    vertex(153, 315);
    vertex(155, 320);
    vertex(150, 319);
    vertex(148, 329);
    vertex(159, 331);
    vertex(165, 331);
    vertex(172, 328);
    vertex(188, 332);
    vertex(192, 323);
    vertex(184, 315);
    vertex(169, 311);
    endShape();
    
    //Marseilles
    beginShape();
    vertex(142, 417);
    vertex(149, 403);
    vertex(157, 397);
    vertex(168, 395);
    vertex(173, 396);
    vertex(178, 390);
    vertex(178, 381);
    vertex(194, 382);
    vertex(197, 385);
    vertex(203, 379);
    vertex(207, 386);
    vertex(204, 390);
    vertex(207, 396);
    vertex(201, 399);
    vertex(204, 402);
    vertex(203, 410);
    vertex(211, 416);
    vertex(198, 421);
    vertex(188, 422);
    vertex(176, 417);
    vertex(169, 412);
    vertex(158, 418);
    vertex(158, 425);
    vertex(154, 427);
    vertex(142, 417);
    endShape();

    //Gascony
    beginShape();
    vertex(128, 363);
    vertex(121, 382);
    vertex(122, 384);
    vertex(112, 399);
    vertex(113, 407);
    vertex(123, 412);
    vertex(134, 417);
    vertex(135, 414);
    vertex(142, 417);
    vertex(149, 403);
    vertex(157, 397);
    vertex(168, 395);
    vertex(163, 387);
    vertex(165, 383);
    vertex(158, 380);
    vertex(156, 374);
    vertex(149, 372);
    vertex(146, 365);
    vertex(128, 363);
    endShape();
    
    //Burgundy
    beginShape();
    vertex(192, 323);
    vertex(205, 331);
    vertex(204, 338);
    vertex(211, 346);
    vertex(213, 352);
    vertex(209, 363);
    vertex(208, 367);
    vertex(194, 382);
    vertex(178, 381);
    vertex(178, 390);
    vertex(173, 396);
    vertex(168, 395);
    vertex(163, 387);
    vertex(165, 383);
    vertex(158, 380);
    vertex(156, 374);
    vertex(165, 365);
    vertex(185, 344);
    vertex(188, 332);
    vertex(192, 323);
    endShape();
    
    //Brest
    beginShape();
    vertex(150, 319);
    vertex(144, 318);
    vertex(142, 312);
    vertex(136, 310);
    vertex(136, 326);
    vertex(124, 323);
    vertex(122, 318);
    vertex(102, 317);
    vertex(100, 322);
    vertex(103, 328);
    vertex(109, 329);
    vertex(123, 344);
    vertex(122, 350);
    vertex(123, 357);
    vertex(128, 363);
    vertex(146, 365);
    vertex(146, 337);
    vertex(148, 329);
    vertex(150, 319);
    endShape();
    
    //Paris
    beginShape();
    vertex(146, 365);
    vertex(149, 372);
    vertex(156, 374);
    vertex(165, 365);
    vertex(185, 344);
    vertex(188, 332);
    vertex(172, 328);
    vertex(165, 331);
    vertex(159, 331);
    vertex(148, 329);
    vertex(146, 337);
    vertex(146, 365);
    endShape();
};

var drawItaly = function() {
    fill(ITALY);
    
    //Venice
    beginShape();
    vertex(278, 443);
    vertex(272, 424);
    vertex(260, 417);
    vertex(261, 401);
    vertex(270, 398);
    vertex(276, 399);
    vertex(279, 389);
    vertex(276, 386);
    vertex(268, 385);
    vertex(259, 388);
    vertex(255, 394);
    vertex(250, 397);
    vertex(246, 392);
    vertex(233, 404);
    vertex(236, 411);
    vertex(240, 415);
    vertex(246, 416);
    vertex(253, 418);
    vertex(263, 434);
    vertex(274, 447);
    vertex(278, 443);
    endShape();
    
    //Rome
    beginShape();
    vertex(247, 442);
    vertex(248, 447);
    vertex(256, 458);
    vertex(271, 464);
    vertex(279, 458);
    vertex(280, 455);
    vertex(279, 451);
    vertex(274, 447);
    vertex(263, 434);
    vertex(250, 438);
    vertex(247, 442);
    endShape();
    
    //Tuscany
    beginShape();
    vertex(233, 415);
    vertex(238, 431);
    vertex(247, 442);
    vertex(250, 438);
    vertex(263, 434);
    vertex(253, 418);
    vertex(246, 416);
    vertex(240, 415);
    vertex(236, 411);
    vertex(233, 415);
    endShape();
    
    //Naples
    beginShape();
    vertex(271, 464);
    vertex(276, 474);
    vertex(290, 487);
    vertex(294, 502);
    vertex(289, 511);
    vertex(290, 514);
    vertex(295, 515);
    vertex(308, 500);
    vertex(311, 491);
    vertex(304, 484);
    vertex(293, 481);
    vertex(279, 458);
    vertex(271, 464);
    endShape();
    
    //Apulia
    beginShape();
    vertex(304, 484);
    vertex(310, 480);
    vertex(318, 485);
    vertex(322, 485);
    vertex(322, 480);
    vertex(297, 456);
    vertex(300, 453);
    vertex(290, 453);
    vertex(278, 443);
    vertex(274, 447);
    vertex(279, 451);
    vertex(280, 455);
    vertex(279, 458);
    vertex(293, 481);
    vertex(304, 484);
    endShape();
    
    //Piedmont
    beginShape();
    vertex(207, 386);
    vertex(204, 390);
    vertex(207, 396);
    vertex(201, 399);
    vertex(204, 402);
    vertex(203, 410);
    vertex(211, 416);
    vertex(222, 410);
    vertex(233, 415);
    vertex(236, 411);
    vertex(233, 404);
    vertex(246, 392);
    vertex(243, 388);
    vertex(229, 385);
    vertex(227, 390);
    vertex(221, 385);
    vertex(213, 387);
    vertex(207, 386);
    endShape();
};

var drawHungary = function() {
    fill(HUNGARY);
    
    //Trieste
    beginShape();
    vertex(276, 399);
    vertex(275, 403);
    vertex(278, 410);
    vertex(282, 401);
    vertex(286, 402);
    vertex(289, 418);
    vertex(306, 436);
    vertex(331, 454);
    vertex(330, 445);
    vertex(337, 446);
    vertex(330, 437);
    vertex(327, 429);
    vertex(331, 424);
    vertex(330, 416);
    vertex(332, 410);
    vertex(323, 408);
    vertex(321, 398);
    vertex(311, 394);
    vertex(308, 383);
    vertex(299, 385);
    vertex(294, 380);
    vertex(289, 385);
    vertex(276, 386);
    vertex(279, 389);
    vertex(276, 399);
    endShape();
    
    //Budapest
    beginShape();
    vertex(394, 376);
    vertex(395, 382);
    vertex(401, 385);
    vertex(406, 396);
    vertex(401, 402);
    vertex(387, 402);
    vertex(367, 406);
    vertex(365, 412);
    vertex(360, 413);
    vertex(342, 410);
    vertex(338, 412);
    vertex(335, 410);
    vertex(332, 410);
    vertex(323, 408);
    vertex(321, 398);
    vertex(311, 394);
    vertex(308, 383);
    vertex(311, 375);
    vertex(322, 370);
    vertex(335, 354);
    vertex(337, 350);
    vertex(350, 347);
    vertex(360, 351);
    vertex(368, 353);
    vertex(377, 360);
    vertex(378, 363);
    vertex(384, 365);
    vertex(394, 376);
    endShape();
    
    //Vienna
    beginShape();
    vertex(292, 357);
    vertex(295, 349);
    vertex(303, 346);
    vertex(316, 348);
    vertex(322, 347);
    vertex(329, 346);
    vertex(337, 350);
    vertex(335, 354);
    vertex(322, 370);
    vertex(311, 375);
    vertex(308, 383);
    vertex(299, 385);
    vertex(294, 380);
    vertex(295, 362);
    vertex(292, 357);
    endShape();

    //Galicia
    beginShape();
    vertex(333, 330);
    vertex(341, 330);
    vertex(344, 332);
    vertex(353, 327);
    vertex(356, 323);
    vertex(361, 324);
    vertex(367, 329);
    vertex(374, 327);
    vertex(379, 324);
    vertex(383, 327);
    vertex(385, 332);
    vertex(399, 338);
    vertex(404, 354);
    vertex(403, 360);
    vertex(404, 371);
    vertex(394, 376);
    vertex(384, 365);
    vertex(378, 363);
    vertex(377, 360);
    vertex(368, 353);
    vertex(360, 351);
    vertex(350, 347);
    vertex(337, 350);
    vertex(329, 346);
    vertex(322, 347);
    vertex(321, 339);
    vertex(322, 347);
    vertex(321, 339);
    vertex(325, 340);
    vertex(329, 338);
    vertex(333, 330);
    endShape();

    //Tyrolia
    beginShape();
    vertex(234, 366);
    vertex(243, 370);
    vertex(246, 369);
    vertex(250, 371);
    vertex(267, 368);
    vertex(271, 370);
    vertex(269, 362);
    vertex(275, 362);
    vertex(281, 356);
    vertex(292, 357);
    vertex(295, 362);
    vertex(294, 380);
    vertex(289, 385);
    vertex(276, 386);
    vertex(268, 385);
    vertex(259, 388);
    vertex(255, 394);
    vertex(250, 397);
    vertex(246, 392);
    vertex(243, 388);
    vertex(245, 384);
    vertex(241, 378);
    vertex(234, 374);
    vertex(234, 366);
    endShape();
    
    //Bohemia
    beginShape();
    vertex(281, 356);
    vertex(276, 346);
    vertex(268, 343);
    vertex(264, 329);
    vertex(266, 325);
    vertex(278, 326);
    vertex(288, 321);
    vertex(297, 322);
    vertex(311, 334);
    vertex(314, 332);
    vertex(321, 339);
    vertex(322, 347);
    vertex(316, 348);
    vertex(303, 346);
    vertex(295, 349);
    vertex(292, 357);
    vertex(281, 356);
    endShape();
};

var drawGermany = function() {
    fill(GERMANY);
    
    //Prussia
    beginShape();
    vertex(347, 243);
    vertex(347, 248);
    vertex(348, 254);
    vertex(344, 262);
    vertex(337, 264);
    vertex(334, 273);
    vertex(328, 274);
    vertex(326, 265);
    vertex(314, 266);
    vertex(307, 273);
    vertex(294, 275);
    vertex(292, 290);
    vertex(297, 296);
    vertex(296, 300);
    vertex(320, 303);
    vertex(324, 299);
    vertex(326, 292);
    vertex(341, 287);
    vertex(345, 289);
    vertex(359, 286);
    vertex(365, 281);
    vertex(367, 265);
    vertex(362, 260);
    vertex(356, 261);
    vertex(354, 251);
    vertex(347, 243);
    endShape();

    
    //Berlin
    beginShape();
    vertex(294, 275);
    vertex(286, 274);
    vertex(287, 267);
    vertex(280, 266);
    vertex(266, 275);
    vertex(266, 283);
    vertex(262, 287);
    vertex(264, 293);
    vertex(261, 296);
    vertex(263, 310);
    vertex(288, 305);
    vertex(296, 300);
    vertex(297, 296);
    vertex(292, 290);
    vertex(294, 275);
    endShape();
    
    //Kiel
    beginShape();
    vertex(244, 254);
    vertex(243, 257);
    vertex(245, 263);
    vertex(244, 270);
    vertex(244, 273);
    vertex(235, 277);
    vertex(234, 274);
    vertex(230, 273);
    vertex(226, 275);
    vertex(227, 280);
    vertex(225, 292);
    vertex(220, 298);
    vertex(215, 297);
    vertex(213, 302);
    vertex(232, 308);
    vertex(241, 316);
    vertex(243, 322);
    vertex(263, 310);
    vertex(261, 296);
    vertex(264, 293);
    vertex(262, 287);
    vertex(266, 283);
    vertex(266, 275);
    vertex(261, 274);
    vertex(260, 269);
    vertex(256, 266);
    vertex(256, 263);
    vertex(254, 255);
    vertex(244, 254);
    endShape();
    
    //Munich
    beginShape();
    vertex(234, 366);
    vertex(243, 370);
    vertex(246, 369);
    vertex(250, 371);
    vertex(267, 368);
    vertex(271, 370);
    vertex(269, 362);
    vertex(275, 362);
    vertex(281, 356);
    vertex(276, 346);
    vertex(268, 343);
    vertex(264, 329);
    vertex(266, 325);
    vertex(278, 326);
    vertex(288, 321);
    vertex(284, 314);
    vertex(288, 305);
    vertex(263, 310);
    vertex(243, 322);
    vertex(237, 322);
    vertex(219, 344);
    vertex(211, 346);
    vertex(213, 352);
    vertex(209, 363);
    vertex(222, 365);
    vertex(225, 362);
    vertex(232, 363);
    vertex(234, 366);
    endShape();
    
    //Ruhr
    beginShape();
    vertex(213, 302);
    vertex(210, 313);
    vertex(208, 315);
    vertex(210, 326);
    vertex(205, 331);
    vertex(204, 338);
    vertex(211, 346);
    vertex(219, 344);
    vertex(237, 322);
    vertex(243, 322);
    vertex(241, 316);
    vertex(232, 308);
    vertex(213, 302);
    endShape();
    
    //Silesia
    beginShape();
    vertex(288, 321);
    vertex(297, 322);
    vertex(311, 334);
    vertex(314, 332);
    vertex(321, 339);
    vertex(325, 340);
    vertex(329, 338);
    vertex(333, 330);
    vertex(326, 327);
    vertex(323, 322);
    vertex(320, 303);
    vertex(296, 300);
    vertex(288, 305);
    vertex(284, 314);
    vertex(288, 321);
    endShape();
};

var drawTurkey = function() {
    fill(TURKEY);
    
    //Syria
    beginShape();
    vertex(530, 509);
    vertex(536, 494);
    vertex(545, 486);
    vertex(555, 484);
    vertex(563, 479);
    vertex(584, 478);
    vertex(609, 493);
    vertex(609, 559);
    vertex(528, 559);
    vertex(532, 535);
    vertex(526, 530);
    vertex(525, 518);
    vertex(530, 509);
    endShape();
    
    //Armenia
    beginShape();
    vertex(609, 493);
    vertex(584, 478);
    vertex(563, 479);
    vertex(562, 471);
    vertex(556, 467);
    vertex(555, 460);
    vertex(557, 449);
    vertex(555, 438);
    vertex(570, 427);
    vertex(589, 442);
    vertex(594, 439);
    vertex(603, 441);
    vertex(609, 440);
    vertex(609, 493);
    endShape();
    
    //Smyrna
    beginShape();
    vertex(417, 489);
    vertex(420, 495);
    vertex(417, 498);
    vertex(417, 507);
    vertex(423, 510);
    vertex(427, 524);
    vertex(435, 523);
    vertex(435, 530);
    vertex(441, 526);
    vertex(447, 528);
    vertex(453, 534);
    vertex(464, 531);
    vertex(466, 521);
    vertex(475, 520);
    vertex(485, 528);
    vertex(491, 530);
    vertex(505, 526);
    vertex(511, 514);
    vertex(520, 517);
    vertex(527, 508);
    vertex(530, 509);
    vertex(536, 494);
    vertex(545, 486);
    vertex(555, 484);
    vertex(563, 479);
    vertex(562, 471);
    vertex(556, 467);
    vertex(555, 460);
    vertex(546, 462);
    vertex(531, 460);
    vertex(508, 480);
    vertex(501, 482);
    vertex(490, 480);
    vertex(473, 491);
    vertex(466, 491);
    vertex(452, 495);
    vertex(432, 493);
    vertex(423, 487);
    vertex(417, 489);
    endShape();

    //Constantinople
    beginShape();
    vertex(408, 470);
    vertex(410, 473);
    vertex(414, 475);
    vertex(410, 482);
    vertex(409, 487);
    vertex(417, 486);
    vertex(417, 489);
    vertex(423, 487);
    vertex(432, 493);
    vertex(452, 495);
    vertex(466, 491);
    vertex(468, 479);
    vertex(468, 461);
    vertex(464, 457);
    vertex(442, 460);
    vertex(440, 458);
    vertex(430, 455);
    vertex(426, 450);
    vertex(420, 451);
    vertex(412, 454);
    vertex(413, 464);
    vertex(408, 470);
    endShape();
    
    //Ankara
    beginShape();
    vertex(555, 438);
    vertex(551, 437);
    vertex(520, 441);
    vertex(514, 438);
    vertex(511, 440);
    vertex(502, 433);
    vertex(481, 438);
    vertex(470, 447);
    vertex(464, 457);
    vertex(468, 461);
    vertex(468, 479);
    vertex(466, 491);
    vertex(473, 491);
    vertex(490, 480);
    vertex(501, 482);
    vertex(508, 480);
    vertex(531, 460);
    vertex(546, 462);
    vertex(555, 460);
    vertex(557, 449);
    vertex(555, 438);
    endShape();
};

var drawRussia = function() {
    fill(RUSSIA);
    
    //St Petersburg
    beginShape();
    vertex(414, 147);
    vertex(410, 152);
    vertex(412, 161);
    vertex(402, 177);
    vertex(403, 183);
    vertex(411, 184);
    vertex(414, 187);
    vertex(408, 187);
    vertex(400, 192);
    vertex(399, 197);
    vertex(387, 196);
    vertex(371, 198);
    vertex(369, 202);
    vertex(372, 205);
    vertex(382, 206);
    vertex(394, 205);
    vertex(405, 217);
    vertex(409, 228);
    vertex(421, 229);
    vertex(428, 225);
    vertex(439, 211);
    vertex(447, 209);
    vertex(451, 213);
    vertex(457, 210);
    vertex(456, 207);
    vertex(458, 194);
    vertex(476, 183);
    vertex(489, 184);
    vertex(515, 169);
    vertex(534, 164);
    vertex(564, 159);
    vertex(573, 143);
    vertex(598, 132);
    vertex(609, 117);
    vertex(609, 0);
    vertex(540, 0);
    vertex(535, 9);
    vertex(530, 6);
    vertex(517, 19);
    vertex(516, 33);
    vertex(513, 38);
    vertex(513, 23);
    vertex(507, 20);
    vertex(505, 26);
    vertex(499, 33);
    vertex(492, 48);
    vertex(495, 58);
    vertex(488, 60);
    vertex(479, 57);
    vertex(477, 55);
    vertex(481, 50);
    vertex(473, 43);
    vertex(466, 45);
    vertex(472, 62);
    vertex(478, 66);
    vertex(478, 74);
    vertex(472, 72);
    vertex(468, 74);
    vertex(457, 91);
    vertex(469, 100);
    vertex(467, 106);
    vertex(462, 109);
    vertex(444, 101);
    vertex(442, 110);
    vertex(447, 115);
    vertex(454, 119);
    vertex(452, 122);
    vertex(434, 118);
    vertex(426, 103);
    vertex(426, 94);
    vertex(414, 88);
    vertex(412, 83);
    vertex(445, 84);
    vertex(457, 79);
    vertex(459, 66);
    vertex(453, 61);
    vertex(417, 47);
    vertex(405, 49);
    vertex(401, 45);
    vertex(397, 48);
    vertex(388, 61);
    vertex(387, 68);
    vertex(393, 73);
    vertex(392, 92);
    vertex(401, 110);
    vertex(402, 118);
    vertex(410, 130);
    vertex(414, 147);
    endShape();
    
    //Moscow
    beginShape();
    vertex(609, 117);
    vertex(598, 132);
    vertex(573, 143);
    vertex(564, 159);
    vertex(534, 164);
    vertex(515, 169);
    vertex(489, 184);
    vertex(476, 183);
    vertex(458, 194);
    vertex(456, 207);
    vertex(457, 210);
    vertex(451, 213);
    vertex(447, 209);
    vertex(439, 211);
    vertex(428, 225);
    vertex(421, 229);
    vertex(409, 228);
    vertex(405, 239);
    vertex(404, 275);
    vertex(392, 278);
    vertex(389, 285);
    vertex(379, 290);
    vertex(386, 309);
    vertex(390, 306);
    vertex(456, 292);
    vertex(468, 295);
    vertex(477, 289);
    vertex(494, 295);
    vertex(505, 280);
    vertex(516, 286);
    vertex(526, 287);
    vertex(533, 283);
    vertex(549, 284);
    vertex(554, 304);
    vertex(564, 305);
    vertex(569, 321);
    vertex(597, 330);
    vertex(609, 330);
    vertex(609, 117);
    endShape();

    //Sevastopol
    beginShape();
    vertex(438, 397);
    vertex(446, 378);
    vertex(459, 375);
    vertex(461, 377);
    vertex(459, 379);
    vertex(465, 383);
    vertex(476, 381);
    vertex(478, 383);
    vertex(472, 385);
    vertex(468, 392);
    vertex(477, 396);
    vertex(477, 401);
    vertex(486, 404);
    vertex(488, 397);
    vertex(494, 396);
    vertex(497, 392);
    vertex(507, 389);
    vertex(506, 384);
    vertex(494, 387);
    vertex(485, 378);
    vertex(503, 364);
    vertex(526, 351);
    vertex(527, 354);
    vertex(514, 365);
    vertex(517, 371);
    vertex(520, 371);
    vertex(515, 384);
    vertex(511, 383);
    vertex(510, 386);
    vertex(517, 393);
    vertex(528, 394);
    vertex(554, 406);
    vertex(567, 408);
    vertex(573, 417);
    vertex(570, 427);
    vertex(589, 442);
    vertex(594, 439);
    vertex(603, 441);
    vertex(609, 440);
    vertex(609, 330);
    vertex(597, 330);
    vertex(569, 321);
    vertex(564, 305);
    vertex(554, 304);
    vertex(549, 284);
    vertex(533, 283);
    vertex(526, 287);
    vertex(516, 286);
    vertex(505, 280);
    vertex(494, 295);
    vertex(477, 289);
    vertex(468, 295);
    vertex(470, 303);
    vertex(466, 307);
    vertex(460, 345);
    vertex(445, 350);
    vertex(434, 360);
    vertex(432, 372);
    vertex(423, 376);
    vertex(422, 382);
    vertex(427, 399);
    vertex(438, 397);
    endShape();
};

drawEngland();
drawFrance();
drawItaly();
drawHungary();
drawGermany();
drawTurkey();
drawRussia();

// Extra sea
fill(SEACOLOUR);

//Kiel
beginShape();
vertex(244, 270);
vertex(244, 273);
vertex(256, 266);
vertex(256, 263);
vertex(244, 270);
endShape();

//Black Sea
beginShape();
vertex(440, 458);
vertex(442, 460);
vertex(439, 463);
vertex(448, 464);
vertex(425, 475);
vertex(414, 475);
vertex(421, 467);
vertex(435, 463);
vertex(440, 458);
vertex(430, 455);
vertex(426, 450);
vertex(422, 441);
vertex(425, 427);
vertex(429, 426);
vertex(430, 423);
vertex(432, 409);
vertex(439, 404);
vertex(438, 397);
vertex(446, 378);
vertex(459, 375);
vertex(461, 377);
vertex(459, 379);
vertex(465, 383);
vertex(476, 381);
vertex(478, 383);
vertex(472, 385);
vertex(468, 392);
vertex(477, 396);
vertex(477, 401);
vertex(486, 404);
vertex(488, 397);
vertex(494, 396);
vertex(497, 392);
vertex(507, 389);
vertex(506, 384);
vertex(494, 387);
vertex(485, 378);
vertex(503, 364);
vertex(526, 351);
vertex(527, 354);
vertex(514, 365);
vertex(517, 371);
vertex(520, 371);
vertex(515, 384);
vertex(511, 383);
vertex(510, 386);
vertex(517, 393);
vertex(528, 394);
vertex(554, 406);
vertex(567, 408);
vertex(573, 417);
vertex(570, 427);
vertex(555, 438);
vertex(551, 437);
vertex(520, 441);
vertex(514, 438);
vertex(511, 440);
vertex(502, 433);
vertex(481, 438);
vertex(470, 447);
vertex(464, 457);
vertex(442, 460);
endShape();

//Denmark
beginShape();
vertex(269, 243);
vertex(268, 246);
vertex(263, 247);
vertex(266, 255);
vertex(254, 255);
vertex(257, 247);
vertex(266, 240);
vertex(269, 243);
endShape();

// Unused islands
fill(255);
// Mallorca
beginShape();
vertex(148, 463);
vertex(142, 469);
vertex(142, 469);
vertex(150, 471);
vertex(154, 466);
endShape();

var writeLabels = function() {
    fill(0);
    textAlign(LEFT, BASELINE);
    
    // Waters
    textSize(14);
    text('ADR', 282, 445);
    text('AEG', 385, 530);
    text('BAL', 308, 255);
    text('BAR', 435, 25);
    text('BLA', 480, 422);
    text('BOT', 334, 205);
    text('EAS', 455, 550);
    text('ENG', 115, 309);
    text('HEL', 212, 260);
    text('ION', 300, 545);
    text('IRI', 84, 280);
    text('LYO', 160, 453);
    text('MAO', 30, 335);
    text('NAO', 50, 110);
    text('NTH', 190, 220);
    text('NWG', 220, 70);
    text('SKA', 245, 221);
    text('TYS', 238, 490);
    text('WES', 125, 495);
    
    // Territories
    textSize(12);
    text('Swi', 211, 378);
    text('Alb', 333, 460);
    text('Ank', 510, 455);
    text('Apu', 291, 470);
    text('Arm', 575, 463);
    text('Bel', 192, 321);
    text('Ber', 270, 292);
    text('Boh', 280, 341);
    text('Bre', 130, 345);
    text('Bud', 350, 390);
    text('Bul', 395, 443);
    text('Bur', 185, 371);
    text('Cly', 133, 201);
    text('Con', 435, 483);
    text('Den', 247, 240);
    text('Edi', 152, 202);
    text('Fin', 375, 160);
    text('Gal', 355, 343);
    text('Gas', 130, 400);
    text('Gre', 348, 490);
    text('Hol', 210, 290);
    text('Kie', 237, 295);
    text('Lvp', 138, 230);
    text('Lvn', 380, 260);
    text('Lon', 160, 280);
    text('Mar', 173, 412);
    text('Mos', 460, 265);
    text('Mun', 235, 350);
    text('Nap', 293, 493);
    text('Naf', 100, 538);
    text('Nwy', 250, 175);
    text('Par', 155, 358);
    text('Pic', 168, 326);
    text('Pie', 215, 408);
    text('Por', 15, 439);
    text('Pru', 320, 284);
    text('Rom', 257, 452);
    text('Ruh', 215, 330);
    text('Rum', 402, 415);
    text('Ser', 350, 450);
    text('Sev', 540, 350);
    text('Sil', 304, 325);
    text('Smy', 460, 510);
    text('Spa', 70, 440);
    text('Stp', 460, 149);
    text('Swe', 293, 170);
    text('Syr', 570, 535);
    text('Tri', 305, 425);
    text('Tun', 205, 548);
    text('Tus', 240, 425);
    text('Tyr', 255, 380);
    text('Ukr', 420, 340);
    text('Ven', 245, 407);
    text('Vie', 302, 366);
    text('Wal', 130, 275);
    text('War', 355, 304);
    text('Yor', 155, 254);
};
writeLabels();
strokeWeight(10);
point(426, 482);
point(504, 503);
point(504, 466);
point(243, 300);
point(273, 300);
point(248, 339);
point(143, 249);
point(157, 210);
point(157, 287);
point(300, 400);
point(356, 369);
point(304, 374);
point(264, 395);
point(270, 457);
point(302, 500);
point(359, 500);
point(353, 431);
point(385, 446);
point(394, 414);
point(510, 335);
point(510, 233);
point(441, 151);
point(347, 309);
point(188, 397);
point(166, 339);
point(134, 355);
point(75, 457);
point(34, 417);
point(187, 308);
point(206, 295);
point(213, 531);
point(251, 245);
point(305, 195);
point(256, 186);

// Outline
resetMatrix();
noFill();
strokeWeight(2);
rect(1, 15, 398, 370);