// Standard colours and variables
var BACKGROUND = color(250, 250, 250);
var GREY = color(100, 100, 100);
var BLUE = color(64, 95, 237);
var PINK = color(255, 0, 175);
var GREEN = color(28, 173, 123);
var ORANGE = color(255, 165, 0);

var draggingPoint = false;
var CONTROL_POINT_SIZE = 12;

/*********************************************************
 * DraggablePoint
 * A freely draggable point with a position and colour.
*********************************************************/

var DraggablePoint = function(x, y, color) {
    this.x = x;
    this.y = y;
    this.color = color || ORANGE;
    this.animation = 0;
};

DraggablePoint.prototype.draw = function() {
    if (draggingPoint === this || this.mouseover()) {
        if (this.animation < 5) {
            this.animation++;
        }
    } else {
        this.animation = 0;
    }

    strokeWeight(1);
    stroke(BACKGROUND);
    if (this.selected) {
        fill(PINK);
    } else {
        fill(this.color);
    }
    
    var r = CONTROL_POINT_SIZE + this.animation;
    ellipse(this.x, this.y, r, r);
};

DraggablePoint.prototype.mouseover = function() {
    return dist(mouseX, mouseY, this.x, this.y) <= CONTROL_POINT_SIZE / 2;
};

DraggablePoint.prototype.move = function() {
    this.x += mouseX - pmouseX;
    this.y += mouseY - pmouseY;
};

var points = [
    new DraggablePoint(100, 300),
    new DraggablePoint(300, 150),
    new DraggablePoint(50, 50),
];

var lines = [[0, 1]];

var projectPointOntoLine = function(p, l) {
    // Project (mouseX, mouseY) onto line
    var p1 = points[l[0]];
    var p2 = points[l[1]];
    var lx = p1.x - p2.x;
    var ly = p1.y - p2.y;
    var mx = p.x - p2.x;
    var my = p.y - p2.y;
    
    var w = (mx * lx + my * ly ) / (lx * lx + ly * ly);
    if (w > 0 && w < 1) {
        noFill();
        stroke(100, 100, 100, 200);
        var x = p1.x * w + p2.x * (1 - w);
        var y = p1.y * w + p2.y * (1 - w);
        ellipse(x, y, 10, 10);
        line(p.x, p.y, x, y);
    }
};

draw = function() {
    background(BACKGROUND);
    
    // Lines
    strokeWeight(2);
    stroke(BLUE);
    for (var i = 0; i < lines.length; i++) {
        var p1 = points[lines[i][0]];
        var p2 = points[lines[i][1]];
        line(p1.x, p1.y, p2.x, p2.y);
    }
    
    // Points
    for (var i = 0; i < points.length; i++) {
        points[i].draw();
    }
    
    projectPointOntoLine(points[2], lines[0]);
};

mousePressed = function() {
    for (var i = 0; i < points.length; i++) {
        if (points[i].mouseover()) {
            draggingPoint = points[i];   
        }
    }
};

mouseReleased = function() {
    for (var i = 0; i < points.length; i++) {
        draggingPoint = false;
    }
};

mouseDragged = function() {
   if (draggingPoint) {
        draggingPoint.x += mouseX - pmouseX;
        draggingPoint.y += mouseY - pmouseY;
   }
};
