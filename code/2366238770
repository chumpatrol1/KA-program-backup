/**************************************************
 * Use the left and right arrow keys to increase
 * the number of slices in the pizza.
***************************************************/

var n = 4;
var x = 200;
var y = 110;

var r = 160;
var BASECOL = color(255, 255, 0);
var PICOL = color(60, 196, 16);
var SLICECOL = color(0, 0, 0);
var RCOL = color(0, 111, 230);

var drawPizza = function(x, y, r) {
    strokeWeight(6);
    fill(255, 148, 66);
    stroke(163, 68, 5);

    var angle = 180 / n;
    
    // Crust
    ellipse(x, y, r, r);
    
    // Highlighted slice
    strokeWeight(2);
    fill(204, 99, 18);
    arc(x, y, r-2, r-2, -angle, angle);
    
    // Other slices
    strokeWeight(1);
    var theta = -angle;
    for (var i=0; i<=n; i++) {
        line(x, y, x + r * cos(theta)/2, y + r*sin(theta)/2);
        theta += angle * 2;
    }
    
    // Slice count
    textSize(20);
    textAlign(CENTER, CENTER);
    fill(SLICECOL);
    text(n + " Slices", x, y - r/2 + 28);
    
    // Slice height
    stroke(RCOL);
    fill(RCOL);
    var x1 = x + (r-1) / 2;
    line(x, y, x1, y);
        
    textSize(12);
    textAlign(LEFT, BASELINE);
    text("r = " + r, (x+x1)/2-10, y-4);
    
};

var drawUnrolled = function(x, y, r) {
    strokeWeight(4);
    fill(255, 148, 66);
    stroke(163, 68, 5);
    
    var angle = 180 / n;
    var dx = r * sin(angle) / 2;
    var dy = r * cos(angle) / 2;
    
    var x1 = x - dx * (n-1) / 2;
    for (var i = 0; i < n; i++) {
        strokeWeight(6);
        if (i % 2) {
            arc(x1, y, r, r, 90-angle, 90+angle);
            strokeWeight(1);
            line(x1, y, x1 - dx + 1, y + dy);
            //line(x1, y, x1 + dx + 1, y + dy);   
        } else {
            arc(x1, y + dy, r, r, 270-angle, 270+angle);
            strokeWeight(1);
            line(x1, y + dy, x1 - dx - 1, y);
            //line(x1, y + dy, x1 + dx + 1, y);   
        }
        x1 += dx;
    }
    
    // Parallelogram
    stroke(255);
    x1 = x - dx * (n + 1)/ 2;
    var dx2 = r/2 * tan(angle);
    var x2 = x1 + dx * (n + 1);
    var dash = 7;
    
    for (var i = 0; i < dx * n; i += dash * 2) {
        var dashL = min(dash, dx * n - i);
        line(x1 + i, y, x1 + i + dashL, y);
        line(x1 + i + dx2, y + r/2, x1 + i + dx2 + dashL, y + r/2);
    }
    
    var l = dist(0, 0, dx2, r/2);
    for (var i = 0; i < l / dash; i += 2) {
        var dashL = min(dash, l - i* dash);
        var dashX = dashL * sin(angle);
        var dashY = dashL * cos(angle);
        
        line(x1 + i * dashX, y + i * dashY,
             x1 + (i+1) * dashX, y + (i + 1) * dashY);
        line(x2 - dx + i * dashX, y + i * dashY,
             x2 - dx + (i+1) * dashX, y + (i + 1) * dashY);
    }
    
    // Height
    x2 = x1 + dx * n + dx2;
    stroke(RCOL);
    strokeWeight(1);
    line(x2 + 10, y, x2 + 10, y + r/2);
    line(x2 + 7, y, x2 + 13, y);
    line(x2 + 7, y + r/2, x2 + 13, y + r/2);
    
    textSize(13);
    textAlign(LEFT, CENTER);
    fill(RCOL);
    text("h = r", x2 + 14, y + r/4);
    
    // Base
    var y1 = y + dy - r/2 - 10;
    stroke(BASECOL);
    line(x1, y1, x1 + n * dx, y1);
    line(x1, y1 - 3, x1, y1 + 3);
    line(x1 + n * dx, y1 - 3, x1 + n * dx, y1 + 3);
    
    textAlign(CENTER, BASELINE);
    fill(BASECOL);
    text("base = ½ × circumference = π × r", x - dx/2, y1 - 4);
    
    fill(255, 148, 66);
    textSize(16);
    textAlign(LEFT, CENTER);
    var txt = "Area";
    var tx = x1;
    text(txt, tx, y + r/2 + 28);
    
    fill(255);
    tx += textWidth(txt);
    txt = " = ";
    text(txt, tx, y + r/2 + 28);
    
    fill(BASECOL);
    tx += textWidth(txt);
    txt = "base";
    text(txt, tx, y + r/2 + 28);
    
    fill(255);
    tx += textWidth(txt);
    txt = " × ";
    text(txt, tx, y + r/2 + 28);
    
    fill(RCOL);
    tx += textWidth(txt);
    txt = "height";
    text(txt, tx, y + r/2 + 28);
    
    fill(255);
    tx += textWidth(txt);
    txt = " = ";
    text(txt, tx, y + r/2 + 28);
    
    fill(BASECOL);
    tx += textWidth(txt);
    txt = "π × r";
    text(txt, tx, y + r/2 + 28);
    
    fill(255);
    tx += textWidth(txt);
    txt = " × ";
    text(txt, tx, y + r/2 + 28);
    
    fill(RCOL);
    tx += textWidth(txt);
    txt = "r";
    text(txt, tx, y + r/2 + 28);
    
    fill(255);
    tx += textWidth(txt);
    txt = " = ";
    text(txt, tx, y + r/2 + 28);
    
    fill(255, 148, 66);
    tx += textWidth(txt);
    txt = "π × r";
    text(txt, tx, y + r/2 + 28);
    
    tx += textWidth(txt);
    txt = "2";
    textSize(9);
    text(txt, tx+1, y + r/2 + 25);
    
};

var draw = function() {
    background(0, 0, 0);
    
    drawPizza(x, y, r);
    drawUnrolled(x - 30, y + 160, r);
    
    noStroke();
    if (n > 4) {
        fill(120);
        if (mouseX <= 60 && mouseX >= 20 &&
            mouseY <= y + 30 && mouseY >= y - 30) {
                fill(240);
        }
        triangle(20, y, 60, y - 30, 60, y + 30);   
    }
    
    fill(120);
    if (mouseX >= width - 60 && mouseX <= width - 20 &&
        mouseY <= y + 30 && mouseY >= y - 30) {
            fill(240);
    }
    triangle(width - 20, y, width - 60, y-30, width - 60, y+30);
};

var keyPressed = function() {
    if (keyCode === RIGHT) {
        n += 2;
    } else if (keyCode === LEFT && n > 4) {
        n -= 2;
    }
};

var mouseReleased = function() {
    if (mouseY <= y + 30 && mouseY >= y - 30) {
        if (mouseX <= 60 && mouseX >= 20 && n > 4) {
            n -= 2;
        } else if (mouseX >= width - 60 && mouseX <= width - 20) {
            n += 2;
        }
    }
};