/********************************************************
 * Click and drag to move the bar magnet over a grid of 
 * compass needles.
 * Use the left and right arrow keys to change the angle
 * of the bar magnet.
 * 
 * TO DO:
 * Ability to change the angle of the bar magnet
 * Make the compass reaction less instanteous
*********************************************************/

var gridX = 24;
var gridY = 24;
var gap = 0;
var friction = 0.6;
var force = 0.5;
var mouseForce = 5;

var barX = 209;
var barY = 210;
var barAngle = 30;
var barWidth = 40;
var barHeight = 100;
var barForce = 100;

var BarMagnet = function() {
    this.x = barX;
    this.y = barY;
    this.width = barWidth;
    this.height = barHeight;
    this.angle = barAngle;
    this.strength = barForce;
    
    this.draw = function() {
        var w = this.width/2;
        var h = this.height/2;
        
        translate(this.x, this.y);
        rotate(this.angle);
        
        noStroke();
        fill(0, 0, 0, 100);
        rect(3-w, 3-h, this.width, this.height);
        
        strokeWeight(1);
        stroke(0, 0, 0);
        fill(200, 20, 20);
        rect(-w, -h, this.width, h);
        fill(20, 20, 200);
        rect(-w, 0, this.width, h);
        
        textSize(22);
        textAlign(CENTER, CENTER);
        fill(255, 255, 255);
        text("N", 0, -this.height/4);
        text("S", 0, this.height/4);
        
        resetMatrix();
    };
    
    this.updatePolePositions = function() {
        var s = (this.height / 2) * sin(this.angle);
        var c = (this.height / 2) * cos(this.angle);

        this.x1 = this.x + s;
        this.x2 = this.x - s;
        this.y1 = this.y - c;
        this.y2 = this.y + c;
    };
    
    this.rotate = function(angle) {
        this.angle += angle;
        this.updatePolePositions();
    };
    
    // Set up x1, y1, x2, y2
    this.updatePolePositions();
};

var Magnet = function(x, y, r, theta) {
    this.x = x;
    this.y = y;
    this.r = r;
    this.rotation = 0;
    this.theta = theta;
    
    this.draw = function() {
        strokeWeight(2);
        var t = this.theta;
        var s = r/4 * sin(t);
        var c = r/4 * cos(t);
        var x1 = this.x + s;
        var y1 = this.y - c;
        var x2 = this.x - s;
        var y2 = this.y + c;
        line(x2, y2, x1, y1);
        line(x1, y1, x1 + 4*cos(t+60), y1 + 4*sin(t+60));
        line(x1, y1, x1 + 4*cos(t+120), y1 + 4*sin(t+120));
    };
    
    this.move = function() {
        this.theta += this.rotation;
        this.theta = constrain(this.theta, -360, 360);   
        this.rotation *= friction;
    };
    
    this.interact = function(that) {
        var r = force * sin(that.theta - this.theta);
        this.rotation += r;
        that.rotation -= r;
    };
    
    this.barInteraction = function(magnet) {
        var dx = this.x - magnet.x1;
        var dy = this.y - magnet.y1;
        var theta1 = atan2(dy, dx) + 90;
        var f1 = magnet.strength / sqrt(dx*dx + dy*dy);
        
        dx = this.x - magnet.x2;
        dy = this.y - magnet.y2;
        var theta2 = atan2(dy, dx) - 90;
        var f2 = magnet.strength / sqrt(dx*dx + dy*dy);
        
        var mx = f1 * cos(theta1) + f2 * cos(theta2);
        var my = f1 * sin(theta1) + f2 * sin(theta2);
        this.theta = atan2(my, mx);
    };
};

var addMagnets = function() {
    var magnets = [];
    var maxDimension = max(gridX, gridY);
    var r = 400 / maxDimension;
    var dx = 0.5 * (400 - gridX * r);
    var dy = 0.5 * (400 - gridY * r);
    
    for (var x=0; x < gridX; x++) {
        var magnetRow = [];
        for (var y=0; y < gridY; y++) {
            var mX = dx + (x + 0.5) * r;
            var mY = dy + (y + 0.5) * r;
            var theta = random() * 360;
            magnetRow.push(new Magnet(mX, mY, r-gap, theta));
        }
        magnets.push(magnetRow);
    }
    return magnets;
};

var barMagnet = new BarMagnet();

// Magnets interact with the bar
var interact = function(magnets) {
    for (var x = 0; x < gridX; x++) {
        for (var y = 0; y < gridY; y++) {
            var m = magnets[x][y];
            m.barInteraction(barMagnet);
        }
    }
};

var magnets = addMagnets();
interact(magnets);

var draw = function() {
    var x, y;
    background(230, 240, 240);
    
    // Draw
    for (x = 0; x < gridX; x++) {
        for (y = 0; y < gridY; y++) {
            magnets[x][y].move();
            magnets[x][y].draw();
        }
    }
    
    barMagnet.draw();
};

var mouseDragged = function() {
    barMagnet.x = mouseX;
    barMagnet.y = mouseY;
    barMagnet.updatePolePositions();
    interact(magnets);
};

var keyPressed = function() {
    // Rotate magnet
    if (keyCode === 37) {
        barMagnet.rotate(-5);
    } else if (keyCode === 39) {
        barMagnet.rotate(5);
    }
    interact(magnets);
};