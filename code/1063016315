/*
    Draws a line object of nodes and edges.
    You can rotate it about the centre of the screen
    using the arrow keys or by dragging the mouse.
    
    Based on the model at: http://www.khanacademy.org/science/projects/v/build-a-ping-pong-ball-launcher
*/

// Move to centre of screen
translate(200, 150.5);
stroke(2, 4, 10);
var rotateAngle = 2;

var cuboidEdges = [[0, 1], [1, 2], [2, 3], [3, 0],
                   [4, 5], [5, 6], [6, 7], [7, 4],
                   [0, 4], [1, 5], [2, 6], [3, 7]];

// *******************************************************
// *****  Coordinates *****

var lowerBoard = { edges: cuboidEdges,
    nodes: [
    [-125, -120, -125], [125,  -120, -125],
    [125,  -120,  125], [-125, -120,  125],
    [-125, -130, -125], [125,  -130, -125],
    [125,  -130,  125], [-125, -130,  125]] 
};

var upperBoard = { edges: cuboidEdges,
    nodes: [
    [-125,  5, -125], [ 125,  5, -125],
    [ 125,  5,  125], [-125,  5,  125],
    [-125, -5, -125], [ 125, -5, -125],
    [ 125, -5,  125], [-125, -5,  125]]
};

var throwingArm = { edges: cuboidEdges,
    nodes: [
    [-120,   5, -25], [ 120,   5, -25],
    [ 120,   5, -10], [-120,   5, -10],
    [-120,  20, -25], [ 120,  20, -25],
    [ 120,  20, -10], [-120,  20, -10]
    ]
};

var cup = {
    nodes: [
    [60, 5, -55], [ 70,  5, -25],
    [90, 5, -25], [100,  5, -55],
    [95, 5, -55], [ 87,  5, -30],
    [73, 5, -30], [ 65,  5, -55],
    [60, 25, -55], [ 70,  25, -25],
    [90, 25, -25], [100,  25, -55],
    [95, 25, -55], [ 87,  25, -30],
    [73, 25, -30], [ 65,  25, -55]],
    edges: [[0,1],   [1,2],   [2,3],   [3,4],
            [4,5],   [5,6],   [6,7],   [7,0],
            [8,9],   [9,10],  [10,11], [11,12],
            [12,13], [13,14], [14,15], [15,8],
            [0,8],   [1,9],   [2,10],  [3,11],
            [4,12],  [5,13],  [6,14],  [7,15]]
};

var sideBoard = { edges: cuboidEdges,
    nodes: [
    [126,  -128,   35], [126,  -128,  135],
    [126,   -28,  135], [126,   -28,   35],
    [140,  -128,   35], [140,  -128,  135],
    [140,   -28,  135], [140,   -28,   35]]
};
// *******************************************************

var objects = [lowerBoard,
               upperBoard,
               sideBoard,
               throwingArm,
               cup];
var currentX = false;
var currentY = false;

var translate3D = function(x, y, z, nodes) {
    for (var i = 0; i < nodes.length; i+=1) {
        nodes[i] = [nodes[i][0]+x, nodes[i][1]+y, nodes[i][2]+z];
    }
};

var rotateY3D = function(theta, nodes) {
    var ct = cos(theta);
    var st = sin(theta);
    var x, y, z;

    for (var i = 0; i < nodes.length; i+=1) {
        x = nodes[i][0];
        y = nodes[i][1];
        z = nodes[i][2];
        nodes[i] = [ct*x + st*z, y, -st*x + ct*z];
    }
};

var rotateX3D = function(theta, nodes){
    var ct = cos(theta);
    var st = sin(theta);
    var x, y, z;
    var obj;
    
    for (var i = 0; i < nodes.length; i+=1) {
        x = nodes[i][0];
        y = nodes[i][1];
        z = nodes[i][2];
        nodes[i] = [x, ct*y - st*z, st*y + ct*z];
    }
};

var draw = function() {
    var i, obj;
    var nodes;
    var node1;
    var node2;
    
    background(255, 255, 255);

    for (obj in objects) {
        nodes = objects[obj].nodes;
        var edges = objects[obj].edges;
        
        for (i = 0; i < edges.length; i+=1) {
            node1 = nodes[edges[i][0]];
            node2 = nodes[edges[i][1]];
            line(node1[0], node1[1], node2[0], node2[1]);
        }    
    }

    if (mouseIsPressed) {
        if (currentX !== false) {
            var theta1 = -(currentX - mouseX) * PI / 10;
            var theta2 = (currentY - mouseY) * PI / 10;
            
            for (obj in objects) {
                nodes = objects[obj].nodes;
                rotateY3D(theta1, nodes);
                rotateX3D(theta2, nodes);    
            }
        }
        currentX = mouseX;
        currentY = mouseY;
    } else {
        currentX = false;
    }
};

var mouseOut = function(){
    mouseIsPressed = false;
};

var keyPressed = function() {
    var f = 0;
    var d = 0;
    if (keyCode === LEFT) {
        f = rotateY3D;
        d = 2;
    } else if (keyCode === RIGHT) {
        f = rotateY3D;
        d = -2;
    } else if (keyCode === UP) {
        f = rotateX3D;
        d = -2;
    } else if (keyCode === DOWN) {
        f = rotateX3D;
        d = 2;
    }
    
    if (f !== 0) {
        for (var obj in objects) {
                f(d, objects[obj].nodes); 
        }
    }
    
};

// Move upper board
rotateX3D(45, upperBoard.nodes);
translate3D(0, -29, 36, upperBoard.nodes);
rotateX3D(45, throwingArm.nodes);
translate3D(0, -29, 36, throwingArm.nodes);
rotateX3D(45, cup.nodes);
translate3D(0, -29, 36, cup.nodes);

// Initial rotations
for (var obj in objects) {
    rotateY3D(-25, objects[obj].nodes);
    rotateX3D(210, objects[obj].nodes);    
}