/*****************************************************
 * An n-sided polygon inside and surrounding a circle.
******************************************************/
// Change this value
var n = 6;
var x = 402;
var y = 166;
var r = 265;

var COL1 = color(110, 180, 255);
var COL2 = color(10, 102, 194);
var STROKECOL = color(67, 94, 122);

var Slider = function(x, y, width, min_v, max_v, current_v) {
    this.x = x;
    this.y = y;
    this.width = width;
    this.min = min_v;
    this.max = max_v;
    this.scale = (max_v - min_v) / width;
    this.val = current_v || min_v;
    this.bx = this.x + (this.val - min_v) * this.scale;
    
    this.held = false;

    this.draw = function() {
        noStroke();
        fill(200);
        rect(this.x, this.y - 1, this.width + 2, 3, 4);
        
        strokeWeight(1);
        stroke(60);
        line(this.x + 1, this.y-1, x + this.width, this.y);
    
        fill(180);
        stroke(50);
        rect(this.bx - 1, this.y - 9, 12, 18, 3);
        
        for (var i=0; i<3; i++) {
            var y = this.y + i * 4 - 4;
            stroke(50);
            line(this.bx + 2, y, this.bx + 8, y); 
            stroke(200);
            line(this.bx + 2, y + 1, this.bx + 8, y + 1); 
        }
    };
    
    this.selected = function() {
        this.held = mouseX > this.bx - 2 && mouseX < this.bx + 12 && 
                    mouseY > this.y - 10 && mouseY < this.y + 10;
    };
    
    this.drag = function() {
        if (this.held) {
            var x = constrain(mouseX, this.x, this.x + this.width);
            this.bx = x;
            this.val = this.min + (x - this.x) * this.scale;
        }
    };
};

var slider = new Slider(20, 40, 160, 3, 96, 6);

var draw = function() {
    background(0, 0, 0);
    
    fill(COL2);
    stroke(STROKECOL);
    strokeWeight(3);
    var r1 = r / (2 * sin(90-180/n)) + 2;

    beginShape();  
    for (var i=0; i<=n; i++) {
        vertex(x + r1*cos(360*(i+0.5)/n), y + r1*sin(360*(i+0.5)/n));
    }
    endShape();
    
    fill(COL1);
    stroke(STROKECOL);
    var r2 = r/2 - 1;
    // Small shape
    beginShape();
    for (var i=0; i<=n; i++) {
        vertex(x + r2*cos(360*i/n), y + r2*sin(360*i/n));
    }
    endShape();
    
    textSize(16);
    textAlign(LEFT, BASELINE);
    stroke(255);
    fill(255);
    strokeWeight(1);
    line(x, y, x+r/2, y);
    text("r", x+r/4-10, y-2);
    
    noFill();
    ellipse(x, y, r, r);
    
    var tx = 57;
    var ty = height - 75;
    var dy = 26;
    var ly = 375;
    
    // Text box
    noStroke();
    fill(0, 0, 0, 220);
    rect(10, ty-dy, 380, 390+dy-ty);
    
    var p1 = round(100000 * n * sin(180/n))/100000;
    var p2 = round(100000 * n * tan(180/n))/100000;
    var av = round(50000 * n * (sin(180/n) + tan(180/n)))/100000;
    fill(COL1);
    text("Perimeter of inner polygon divided by 2r = "+p1, tx, ty);
    fill(COL2);
    text("Perimeter of outer polygon divided by 2r = "+p2, tx, ty+dy);
    fill(255);
    text("Average : " + av, tx, ty+dy*2);
    
    var d = floor(log(p2 - p1)/log(10));
    var tick = pow(10, d);
    var tick_i = round(1/tick);
    var min_v = (floor(p1 * tick_i) - 1) / tick_i;
    var max_v = (ceil(p2 * tick_i) + 1) / tick_i;
    var ticks = (max_v - min_v) * tick_i;
    
    stroke(STROKECOL);
    strokeWeight(4);
    line(40, ly, width - 40, ly);
    var length = width - 100;
    
    strokeWeight(2);
    fill(255);
    textAlign(CENTER, BASELINE);
    textSize(11);
    for (var i=0; i < round(ticks) + 1; i++) {
        var tx = 50 + length * i / ticks;
        var txt = round(tick_i * (min_v + i * tick)) / tick_i;
        line(tx, ly - 7, tx, ly + 7);
        text(txt + "", tx, ly - 12);
    }
    
    strokeWeight(1);
    stroke(255);
    fill(COL1);
    var s = length/(round(ticks) * tick);

    ellipse(50 + s * (p1-min_v), ly, 12, 12);
    fill(COL2);
    ellipse(50 + s * (p2-min_v), ly, 12, 12);
    
    fill(255);
    textSize(16);
    textAlign(LEFT, BASELINE);
    text(n + "-sided shape", 24, 25);
    slider.draw();
};

var mousePressed = function() {
    slider.selected();
};

var mouseReleased = function() {
    slider.held = false;
};

var mouseDragged = function() {
    slider.drag();
    n = round(slider.val);
};