var BACKGROUND = color(250, 250, 250);
var GREY = color(100, 100, 100);
var BLUE = color(64, 95, 240, 160);
var PINK = color(255, 0, 175);
var GREEN = color(28, 173, 123, 160);
var ORANGE = color(255, 165, 0);
var GRIDGREY = color(230, 240, 230);
var TEXTCOL = color(20, 20, 20);

/*********************************************************************
 *      Define functions
*********************************************************************/

var f = function(x) {
    return cos(x);
};

var p1 = function(x) {
    return 1;
};

var p2 = function(x) {
    return 1 - x * x / 2;
};

// Working with radians
var p3 = function(x) {
    var x2 = x * x / 10313;
    return 1 - x2 / 2 + x2 * x2 / 24;
};

// Working with radians
var p4 = function(x) {
    var x2 = x * x / 10313;
    return 1 - x2 / 2 + x2 * x2 / 24 - x2 * x2 * x2 / 720;
};

// Working with radians
var p5 = function(x) {
    var x2 = x * x / 10313;
    return 1 - x2 / 2 + x2 * x2 / 24 - x2 * x2 * x2 / 720 + x2 * x2 * x2 * x2 / 40320;
};

/*********************************************************************
 *      Graph parameters
*********************************************************************/
// Graph origin
var originX = width / 2;
var originY = height / 2;

// Pixels between ticks
var xTickSize = 20;
var yTickSize = 18;

// Value represented by a tick
var xTickValue = 40;
var yTickValue = 0.1;

/*********************************************************************
 *      Draw functions
*********************************************************************/

var drawGrid = function() {
    stroke(GRIDGREY);
    strokeWeight(1);
    
    var minX = originX % xTickSize;
    for (var x = minX; x < width; x += xTickSize) {
        line(x, 0, x, height);
    }
    
    var minY = originY % xTickSize;
    for (var y = minY; y < height; y += xTickSize) {
        line(0, y, width, y);
    }
    
    // Axes
    stroke(GREY);
    line(originX, 0, originX, height);
    line(0, originY, width, originY);
    
    // Labels
    fill(GREY);
    textSize(11);
    
    var minX = originX - xTickSize * 2 * floor(0.5 * originX / xTickSize);
    var maxX = originX + xTickSize * 2 * floor(0.5 * (width - originX) / xTickSize);
    var scaleX = xTickValue/ xTickSize * 1000;

    textAlign(CENTER, TOP);
    for (var x = minX; x <= maxX; x += 2 * xTickSize) {
        if (x !== originX) {
            line(x, originY - 2, x, originY + 2);
            text("" + round((x - originX) * scaleX) / 1000, x, originY + 5);
        }
    }
    
    var minY = originY - yTickSize * 2 * floor(0.5 * originY / yTickSize);
    var maxY = originY + yTickSize * 2 * floor(0.5 * (height - originY) / yTickSize);
    var scaleY = yTickValue/ yTickSize * 1000;
    
    textAlign(RIGHT, CENTER);
    for (var y = minY; y <= maxY; y += 2 * yTickSize) {
        if (y !== originY) {
            line(originX - 2, y, originX + 2, y);
            text("" + round((originY - y) * scaleY) / 1000,  originX - 5, y);
        }
    }
};

// Plot a function, f, in a given colour with res points
var plotFunction = function(f, colour, res) {
    var scaleX = xTickValue / xTickSize * width / res;
    var scaleY = yTickSize / yTickValue;
    var minX = -originX * xTickValue / xTickSize;
    var minY = -originX * xTickValue / xTickSize;
    
    stroke(colour);
    strokeWeight(2);
    noFill();
    
    beginShape();
    for (var i = 0; i <= res; i++) {
        var xPos = i * width / res;
        var xValue = minX + i * scaleX;
        var yValue = f(xValue);
        var yPos = originY - yValue * scaleY;
        //println(xPos + " " + yPos);
        vertex(xPos, yPos);
    }
    endShape();
};


/*********************************************************************
 *      Main loop
*********************************************************************/

draw = function() {
    background(BACKGROUND);
    drawGrid();
    plotFunction(f, BLUE, 200);
    plotFunction(p5, GREEN, 200);
    
};