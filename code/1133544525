/********************************************************
 * A grid of magnets which interact with their
 * immediate neighbours. They start with a random
 * orientation but an order generally emerges.
 * 
 * Hold down the mouse to influence the position.
*********************************************************/
var gridX = 20;
var gridY = 20;
var gap = 0;
var friction = 0.9;
var force = 0.5;
var mouseForce = 4;

// Square distance from mouse
var mouseInfluence = 400;    

var Magnet = function(x, y, r, theta) {
    this.x = x;
    this.y = y;
    this.r = r;
    this.rotation = 0;
    this.theta = theta;
    
    this.draw = function() {
        strokeWeight(2);
        var t = this.theta;
        var dx = + r/4 * sin(t);
        var dy = - r/4 * cos(t);
        line(x + dx, y + dy, x - dx, y - dy);
        line(x + dx, y + dy,
             x + dx + 4 * cos(t + 60),
             y + dy + 4 * sin(t + 60));
        line(x + dx, y + dy,
             x + dx + 4 * cos(t + 120),
             y + dy + 4 * sin(t + 120));
    };
    
    this.move = function() {
        this.theta += this.rotation;  
        this.rotation *= friction;
    };
    
    this.interact = function(that) {
        var r = force * sin(that.theta - this.theta);
        this.rotation += r;
        that.rotation -= r;
    };
    
    this.mouseInteract = function () {
        var dx = this.x - mouseX;
        var dy = this.y - mouseY;
        if (dx * dx + dy * dy < mouseInfluence) {
            var theta = atan2(dy, dx) - this.theta;
            this.rotation -= mouseForce * cos(theta);
        }
    };
};

var addMagnets = function() {
    var magnets = [];
    var maxDimension = max(gridX, gridY);
    var r = (400 - gap * 2) / maxDimension;
    var dx = 0.5 * (400 - gridX * r);
    var dy = 0.5 * (400 - gridY * r);
    
    for (var x=0; x < gridX; x++) {
        var magnetRow = [];
        for (var y=0; y < gridY; y++) {
            var mX = dx + (x + 0.5) * r;
            var mY = dy + (y + 0.5) * r;
            var theta = random() * 360;
            magnetRow.push(new Magnet(mX, mY, r-gap, theta));
        }
        magnets.push(magnetRow);
    }
    return magnets;
};

// Magnets interact with their neighbours
var interact = function(magnets) {
    for (var x = 0; x < gridX; x++) {
        for (var y = 0; y < gridY; y++) {
            var m = magnets[x][y];
            if (x > 0) {
                m.interact(magnets[x-1][y]);
            }
            if (y > 0) {
                m.interact(magnets[x][y-1]);
            }
            if (mouseIsPressed) {
                m.mouseInteract();
            }
        }
    }
};

var magnets = addMagnets();

var draw = function() {
    background(230, 240, 240);
    
    // Draw
    for (var x = 0; x < gridX; x++) {
        for (var y = 0; y < gridY; y++) {
            magnets[x][y].move();
            magnets[x][y].draw();
        }
    }

    interact(magnets);

};