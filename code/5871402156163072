// Return a 2D array of random numbers
var getRandomNumbers = function(n, m, p) {
    p = p || 1;
    var grid = [];
    var p2 = (1 - p) / 2;
    
    for (var i = 0; i < n; i++) {
        var row = [];
        for (var j = 0; j < m; j++) {
            row.push(random() * p + p2);
        }
        grid.push(row);
    }
    
    return grid;
};

// Interpolate between points
var getValues = function(points, width, height, freq, amp) {
    var x, y, px, py, px1, px2, ix1, iy1, v1, v2;
    var w = points.length;
    var h = points[0].length - 1;
    var values = [];
    
    for (x = 0; x < width; x++) {
        px = x * freq;
        ix1 = px | 0;
        px -= ix1;
        px1 = points[ix1 % w];
        px2 = points[(ix1 + 1) % w];
        
        for (y = 0; y < height; y++) {
            py = y * freq;
            iy1 = py | 0;
            v1 = lerp(px1[iy1 % h], px2[iy1 % h], px);
            v2 = lerp(px1[(iy1 + 1) % h], px2[(iy1 + 1) % h], px);
            values.push(lerp(v1, v2, py - iy1) * amp);
        }
    }
    
    return values;
};

var sumArrays = function(arr1, arr2) {
    var arr3 = arr1.map(function(v, i) {
        return v + arr2[i];
    });
    return arr3;
};

var drawNoise = function(values, x, y, w, h) {
    for (var i = 0; i < w; i++) {
        for (var j = 0; j < h; j++) {
            stroke(255 * values[j * w + i]);
            point(x + i, y + j);
        }
    }
};

var points = getRandomNumbers(11, 11, 1);
var values = getValues(points, 160, 160, 0.1, 0.5);

for (var i = 1; i < 4; i++) {
    var v2 = getValues(points, 160, 160, 0.1 * pow(2, i), 0.5 * pow(0.5, i));
    values = sumArrays(values, v2);
}
drawNoise(values, 100, 100, 160, 160);

