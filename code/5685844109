
var ORANGE = color(255, 165, 0);
var BLUE = color(64, 95, 237);
var GREEN = color(28, 173, 123);
var BACKGROUND = (0);

var thresholdR = 40;
var thresholdRa = thresholdR + 1.2;
var thresholdR2 = thresholdR * thresholdR;
var thresold = 1 / thresholdR2;
var thresolda = 1 / (thresholdRa * thresholdRa);
var thresholdd = 1 / (thresold - thresolda);
var selected = false;

var callForEach = function(arr, func) {
    for (var i = 0; i < arr.length; i++) {
        arr[i][func]();
    }
};

/*************************************************
 *      DraggablePoint
 *  A point that can be dragged
**************************************************/
{
var DraggablePoint = function(x, y, r) {
    this.x = x;
    this.y = y;
    this.r = r || 8;
    this.color = ORANGE;
    this.animation = 0;
};

DraggablePoint.prototype.draw = function() {
    if (this.selected || (!this.selected && this.mouseOver())) {
        if (this.animation < 5) {
            this.animation++;
        }
        cursor(MOVE);
    } else {
        this.animation = 0;
    }

    stroke(BACKGROUND);
    strokeWeight(1);
    fill(this.color);
    
    var pr = this.r * 2 + this.animation;
    ellipse(this.x, this.y, pr, pr);
};

DraggablePoint.prototype.mouseOver = function() {
    return dist(mouseX, mouseY, this.x, this.y) <= this.r + 2;
};

DraggablePoint.prototype.move = function(dx, dy) {
    this.x = mouseX + dx;
    this.y = mouseY + dy;
};
}
/*************************************************
 *      Set-up
**************************************************/

var points = [
    new DraggablePoint(200, 100),
    new DraggablePoint(100, 200),
    new DraggablePoint(300, 200),
    new DraggablePoint(200, 300),
];

/*************************************************
 *      Main calculation
**************************************************/

var drawMetaBalls = function() {
    loadPixels();
    
    var p = imageData.data;
    if (!p) { return; }
    
    var p1 = points[0];
    var p2 = points[1];
    var n = points.length;
    var x, y, t, i, pi, a, d;
    
    for (x = 0; x < width; x++) {
        for (y = 0; y < height; y++) {
            t = 0;
            for (i = 0; i < n; i++) {
                pi = points[i];
                d = (x - pi.x) * (x - pi.x) + (y - pi.y) * (y - pi.y);
                t += 1 / (1 + d);
            }
            if (t > thresolda) {
                i = x + y * width << 2;
                
                a = thresold - t;
                if (a > 0) {
                    // Anti-alias
                    a = 1 - a * thresholdd;
                  
                    p[i++] = 64 * a;
                    p[i++] = 150 * a;
                    p[i] = 250 * a;
                    
                    /*
                    p[i++] = 255;
                    p[i++] = 255;
                    p[i] = 255;
                    */
                } else {
                    //a = 1;
                    t = 1 / (thresholdR2 * t);
                    p[i++] = 64 * t + 255 * (1 - t);
                    p[i++] = 150 * t + 255 * (1 - t);
                    p[i] = 250 * t + 255 * (1 - t);
                }
                

            }
        }
    }
    
    updatePixels();
};

/*************************************************
 *      Main loop
**************************************************/

draw = function() {
    background(BACKGROUND);
    cursor('default');
    drawMetaBalls();
    callForEach(points, 'draw');
};

/*********************************************
 *      Event handling
**********************************************/
{
mousePressed = function() {
    for (var i = points.length; i--;) {
        if (points[i].mouseOver()) {
            selected = points[i];
            break;
        }
    }
};

mouseReleased = function() {
    selected = false;
};

mouseDragged = function() {
    if (selected) {
        selected.move(mouseX - pmouseX, mouseY - pmouseY);
    }
};

mouseOut = mouseReleased;
}
