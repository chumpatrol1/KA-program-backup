background(0);

// Either function takes a string, an (x, y) coordinate a width and an optional textSize
// If you want you could move the text size out of the function.
// Text is centered on the y coordinate.
// It would be possible to make the y align a parameter

// This function ensures the distance between the center of each letter is equal
var liquidTextOld = function(txt, x, y, w, size) {
    // Draw a rect for debugging purposes only
    /*
    pushStyle();
    noFill();
    strokeWeight(2);
    stroke(200);
    var s = (size || 12) - 2;
    rect(x, y - s, w, s * 2);
    popStyle();
    */
    
    // If there's no text then there's no point
    if (!txt) { return; }
    textSize(size || 12);
    
    var n = txt.length;
    
    // If the text is a single character, center it
    if (n === 1) {
        textAlign(CENTER, CENTER);
        text(txt, x + w / 2, y);
        return;
    }
    
    // Write first and last letters at the extremes
    var letter1 = txt.charAt(0);
    textAlign(LEFT, CENTER);
    text(letter1, x, y);
    
    var letter2 = txt.charAt(n - 1);
    textAlign(RIGHT, CENTER);
    text(letter2, x + w, y);
    
    // Calculate the new width and divide it up
    w -= textWidth(letter1 + letter2) / 2;
    var dx = w / (n - 1);
    
    // Write the remaining letters
    textAlign(CENTER, CENTER);
    x += textWidth(letter1)/2 + dx;
    for (var i = 1; i < n - 1; i++) {
        /*
        pushStyle();
        noFill();
        strokeWeight(2);
        stroke(200);
        var s = (size || 12) - 2;
        rect(x - dx / 2, y - s, dx, s * 2);
        popStyle();
        */
        
        text(txt.charAt(i), x, y);
        x += dx;
    }
};

// This function ensures the distance between each letter is equal
var liquidText = function(txt, x, y, w, size) {
    // If there's no text then there's no point
    if (!txt) { return; }
    textSize(size || 12);
    
    // Draw a rect for debugging purposes only
    /*
    pushStyle();
    noFill();
    strokeWeight(2);
    stroke(200);
    var s = (size || 12) - 2;
    rect(x, y - s, w, s * 2);
    popStyle();
    */
    
    var n = txt.length;
    
    // If the text is a single character, center it
    if (n === 1) {
        textAlign(CENTER, CENTER);
        text(txt, x + w / 2, y);
        return;
    }
    
    // Subtract length of each letter one-by-one
    // (Not the same as doing the whole string at once)
    for (var i = 0; i < n; i++) {
        w -= textWidth(txt.charAt(i));
    }
    
    var dx = w / (n - 1);
    
    // Write the remaining letters
    textAlign(LEFT, CENTER);
    for (var i = 0; i < n; i++) {
        var letter = txt.charAt(i);
        text(letter, x, y);
        x += dx + textWidth(letter);
    }
};

// Testing
fill(250);
liquidText("", 20, 16, 360);
liquidText("A", 20, 40, 360);
liquidText("B", 20, 72, 360, 20);
liquidText("Hello", 20, 108, 360, 16);
liquidText("Hello", 120, 130, 160, 16);
liquidText("Hello", 180, 155, 40, 16);
liquidText("Some sort of text", 20, 175, 360);
liquidText("Some sort of text", 20, 200, 360, 24);
liquidText("Some sort of text", 20, 230, 360, 40);
liquidText("Hey peter, could you help me install a liquid text system", 20, 260, 360, 16);
liquidText("0123456789", 20, 280, 360, 16);
liquidText("01234567890123456789", 20, 300, 360, 16);
liquidText("mmmmmmmmmmllllllllll", 20, 320, 360, 16);
liquidText("llllllllllmmmmmmmmmm", 20, 335, 360, 16);
