/****************************************************
 * I was just trying to fix the rotation
 * See the Benjamin's original (now updated) at:
 * 
 * https://www.khanacademy.org/cs/spin-off-of-screen-off-a-competition-like-no-otherbased-on-face-off/6719309657145344
****************************************************/

var iBT = 3;
var bT = 9;
var rot = 0;

var draw = function() {
    
    var mx = -10;
    var my = -75;
    
    fill(255, 255, 255, 200);
    rect(0, 0, 400, 400);
    
    translate(mouseX, mouseY);
    rotate(rot);
    if (mouseIsPressed) {
        rot += 20;
    }
    
    // Hilt
  
   strokeWeight(1);
   stroke(100, 100, 100);
    fill(125, 125, 125);
   triangle(mx, my + 1, mx + 20, my + 1, mx + 10, my - 100);
   triangle(mx, my + 145, mx + 20, my + 145, mx + 10, my + 250);
     stroke(50, 50, 50);
    fill(170, 170, 170);
    triangle(mx + 3, my + 5, mx + 17, my + 5, mx + 10, my - 75);
    triangle(mx + 3, my + 145, mx + 17, my + 145, mx + 10, my + 225);
    fill(190, 190, 190);
    triangle(mx + 6, my + 5, mx + 14, my + 5, mx + 10, my - 50);
    triangle(mx + 6, my + 145, mx + 14, my + 145, mx + 10, my + 200);
    fill(210, 210, 210);
    triangle(mx + 8, my + 5, mx + 12, my + 5, mx + 10, my - 50);
    triangle(mx + 8, my + 145, mx + 12, my + 145, mx + 10, my + 200);
   strokeWeight(1/4);
   stroke(0, 0, 0);
   fill(125, 125, 125);
   rect(mx, my, 20, 150);
   strokeWeight(13);
   stroke(160, 160, 160);
   line(mx + 10, my + 7, mx + 10, my + 143);
   strokeWeight(9);
   stroke(190, 190, 190);
   line(mx + 10, my + 7, mx + 10, my + 143);
   strokeWeight(1/8);
   stroke(0, 0, 0);
   fill(225, 225, 225);
   rect(mx + 8, my + 13, 4, 5);
   rect(mx + 8, my + 58, 4, 5);
   rect(mx + 8, my + 87, 4, 5);
   rect(mx + 8, my + 133, 4, 5);
   strokeWeight(7);
   stroke(215, 3, 3);
   point(mx + 10, my + 8);
   point(mx + 10, my + 142);
   point(mx + 10, my + 96);
   point(mx + 10, my + 54);
   stroke(240, 240, 240);
   point(mx + 10, my + 20);
   point(mx + 10, my + 65);
   point(mx + 10, my + 85);
   point(mx + 10, my + 130);

   
    // Hilt divider & grips
   
   strokeWeight(3);
   stroke(0, 0, 0);
   line(mx, my + 75, mx + 20, my + 75);
   strokeWeight(1/2);
   line(mx, my + 71, mx + 20, my + 71);
   line(mx, my + 79, mx + 20, my + 79);
   line(mx - 1, my + 30, mx + 21, my + 30);
   line(mx - 1, my + 33, mx + 21, my + 33);
   line(mx - 1, my + 36, mx + 21, my + 36);
   line(mx - 1, my + 39, mx + 21, my + 39);
   line(mx - 1, my + 42, mx + 21, my + 42);
   line(mx - 1, my + 108, mx + 21, my + 108);
   line(mx - 1, my + 111, mx + 21, my + 111);
   line(mx - 1, my + 114, mx + 21, my + 114);
   line(mx - 1, my + 117, mx + 21, my + 117);
   line(mx - 1, my + 120, mx + 21, my + 120);
   strokeWeight(2);
   stroke(75, 75, 75);
   line(mx - 1, my + 46, mx + 21, my + 46);
   line(mx - 1, my + 104, mx + 21, my + 104);
   
   
    // Blade, made of contrasting shades of red (Outer blade, inner blade, and mid blade.) to give the appearance of actually being a light sword.
    
       // Outer blast (The bubbles right after the beam emitters (see below).
    noStroke();
    fill(255, 0, 0);
    ellipse(mx + 10, my - 40, bT + 10, 40);
    ellipse(mx + 10, my + 190, bT + 10, 40);
    stroke(255, 0, 0);   // Outer blade.
    strokeWeight(bT);
    line(mx + 10,my + 180,mx + 10,my + 450);
    line(mx + 10,my - 30,mx + 10,my - 300);
    strokeWeight(iBT);   // Inner blade.
     stroke(250, 175, 175);
    line(mx + 10,my - 25,mx + 10,my - 300);
    line(mx + 10,my + 175,mx + 10,my + 450);
    strokeWeight(2);   // Mid blade
    stroke(210, 75, 75);
    line(mx + 7,my - 25,mx + 7,my - 295);
    line(mx + 13,my - 25,mx + 13,my - 295); 
    line(mx + 7,my + 175,mx + 7,my + 445);
    line(mx + 13,my + 175,mx + 13,my + 445);
    noStroke();   // Inner blast (same as outer blast, but brighter).
    fill(250, 175, 175);
    ellipse(mx + 10, my - 35, iBT + 10, 20);
    ellipse(mx + 10, my + 185, iBT + 10, 20);
    
    
    bT += 3;
    iBT += 2;
    
    if (bT > 12) { bT = 9; }
    if (iBT > 5) { iBT = 3; }
    
    // Beam emitters (The part just before the blade in the actual image.).
    
    fill(160, 160, 160);
    rect(mx, my - 32, 20, 5);
    rect(mx, my + 178, 20, 5);
    rect(mx + 1, my - 25, 18, 6);
    rect(mx + 1, my + 170, 18, 6);
    rect(mx - 2, my - 30, 24, 6);
    rect(mx - 2, my + 175, 24, 6);
    stroke(0, 0, 0);     // Beam emitter heat sinks (The horizontal lines on the beam emitters.).
    strokeWeight(1/8); 
    line(mx - 3, my - 28, mx + 23, my - 28);
    line(mx - 3, my - 26, mx + 23, my - 26);
    line(mx - 3, my - 24, mx + 23, my - 24);
    line(mx, my - 22, mx + 20, my - 22);
    line(mx, my - 20, mx + 20, my - 20);
    line(mx, my + 172, mx + 20, my + 172);
    line(mx, my + 174, mx + 20, my + 174);
    line(mx - 3, my + 176, mx + 23, my + 176);
    line(mx - 3, my + 178, mx + 23, my + 178);
    line(mx - 3, my + 180, mx + 23, my + 180);
    
    resetMatrix();
};



//This is a (very) loose spin-off of PureFuzion313's "Best Yet:D First Animation".